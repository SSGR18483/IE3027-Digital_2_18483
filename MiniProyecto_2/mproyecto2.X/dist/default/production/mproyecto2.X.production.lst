

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 14 21:51:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0000                     	;# 
   449  0001                     	;# 
   450  0002                     	;# 
   451  0003                     	;# 
   452  0004                     	;# 
   453  0005                     	;# 
   454  0006                     	;# 
   455  0007                     	;# 
   456  0008                     	;# 
   457  0009                     	;# 
   458  000A                     	;# 
   459  000B                     	;# 
   460  000C                     	;# 
   461  000D                     	;# 
   462  000E                     	;# 
   463  000E                     	;# 
   464  000F                     	;# 
   465  0010                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  001D                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  0081                     	;# 
   484  0085                     	;# 
   485  0086                     	;# 
   486  0087                     	;# 
   487  0088                     	;# 
   488  0089                     	;# 
   489  008C                     	;# 
   490  008D                     	;# 
   491  008E                     	;# 
   492  008F                     	;# 
   493  0090                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0093                     	;# 
   498  0093                     	;# 
   499  0094                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0098                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  009F                     	;# 
   511  0105                     	;# 
   512  0107                     	;# 
   513  0108                     	;# 
   514  0109                     	;# 
   515  010C                     	;# 
   516  010C                     	;# 
   517  010D                     	;# 
   518  010E                     	;# 
   519  010F                     	;# 
   520  0185                     	;# 
   521  0187                     	;# 
   522  0188                     	;# 
   523  0189                     	;# 
   524  018C                     	;# 
   525  018D                     	;# 
   526  0013                     _SSPBUF	set	19
   527  0014                     _SSPCON	set	20
   528  0009                     _PORTEbits	set	9
   529  001A                     _RCREG	set	26
   530  0019                     _TXREG	set	25
   531  000C                     _PIR1bits	set	12
   532  000B                     _INTCONbits	set	11
   533  0009                     _PORTE	set	9
   534  0008                     _PORTD	set	8
   535  0006                     _PORTB	set	6
   536  0005                     _PORTA	set	5
   537  0018                     _RCSTA	set	24
   538  0094                     _SSPSTAT	set	148
   539  0093                     _SSPADD	set	147
   540  0091                     _SSPCON2	set	145
   541  0096                     _IOCB	set	150
   542  008C                     _PIE1bits	set	140
   543  0087                     _TRISCbits	set	135
   544  0089                     _TRISE	set	137
   545  0088                     _TRISD	set	136
   546  0086                     _TRISB	set	134
   547  0085                     _TRISA	set	133
   548  0099                     _SPBRG	set	153
   549  0098                     _TXSTA	set	152
   550  048C                     _ACKEN	set	1164
   551  048D                     _ACKDT	set	1165
   552  048B                     _RCEN	set	1163
   553  048A                     _PEN	set	1162
   554  0488                     _SEN	set	1160
   555  043C                     _TRISC4	set	1084
   556  043B                     _TRISC3	set	1083
   557  0189                     _ANSELH	set	393
   558  0188                     _ANSEL	set	392
   559  0187                     _BAUDCTLbits	set	391
   560                           
   561                           	psect	cinit
   562  000F                     start_initialization:	
   563                           ; #config settings
   564                           
   565  000F                     __initialization:
   566                           
   567                           ; Clear objects allocated to COMMON
   568  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   569  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   570  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   571                           
   572                           ; Clear objects allocated to BANK0
   573  0012  1283               	bcf	3,5	;RP0=0, select bank0
   574  0013  1303               	bcf	3,6	;RP1=0, select bank0
   575  0014  01C2               	clrf	__pbssBANK0& (0+127)
   576  0015  01C3               	clrf	(__pbssBANK0+1)& (0+127)
   577  0016  01C4               	clrf	(__pbssBANK0+2)& (0+127)
   578  0017  01C5               	clrf	(__pbssBANK0+3)& (0+127)
   579  0018  01C6               	clrf	(__pbssBANK0+4)& (0+127)
   580  0019  01C7               	clrf	(__pbssBANK0+5)& (0+127)
   581  001A  01C8               	clrf	(__pbssBANK0+6)& (0+127)
   582  001B  01C9               	clrf	(__pbssBANK0+7)& (0+127)
   583  001C  01CA               	clrf	(__pbssBANK0+8)& (0+127)
   584  001D  01CB               	clrf	(__pbssBANK0+9)& (0+127)
   585  001E  01CC               	clrf	(__pbssBANK0+10)& (0+127)
   586  001F  01CD               	clrf	(__pbssBANK0+11)& (0+127)
   587  0020                     end_of_initialization:	
   588                           ;End of C runtime variable initialization code
   589                           
   590  0020                     __end_of__initialization:
   591  0020  0183               	clrf	3
   592  0021  120A  118A  28C1   	ljmp	_main	;jump to C main() function
   593                           
   594                           	psect	bssCOMMON
   595  0077                     __pbssCOMMON:
   596  0077                     _led2:
   597  0077                     	ds	1
   598  0078                     _led1:
   599  0078                     	ds	1
   600  0079                     _escribir:
   601  0079                     	ds	1
   602                           
   603                           	psect	bssBANK0
   604  0042                     __pbssBANK0:
   605  0042                     _giros:
   606  0042                     	ds	6
   607  0048                     _num:
   608  0048                     	ds	2
   609  004A                     _cont:
   610  004A                     	ds	2
   611  004C                     _leer:
   612  004C                     	ds	2
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:
   616  0070                     ?_con_mp2:
   617  0070                     ?_txint:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ??_txint:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_main:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_I2C_Master_Wait:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_I2C_Master_Start:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_Master_Stop:	
   633                           ; 1 bytes @ 0x0
   634                           
   635                           
   636                           ; 1 bytes @ 0x0
   637  0070                     	ds	4
   638  0074                     ??_con_mp2:
   639  0074                     ??_I2C_Master_Wait:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ??_I2C_Master_Start:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     ??_I2C_Master_Stop:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0074                     ?_I2C_Master_Write:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  0074                     ??___aldiv:	
   652                           ; 1 bytes @ 0x4
   653                           
   654  0074                     ?_I2C_Master_Read:	
   655                           ; 1 bytes @ 0x4
   656                           
   657  0074                     I2C_Master_Write@d:	
   658                           ; 2 bytes @ 0x4
   659                           
   660  0074                     I2C_Master_Read@a:	
   661                           ; 2 bytes @ 0x4
   662                           
   663                           
   664                           ; 2 bytes @ 0x4
   665  0074                     	ds	2
   666  0076                     ??_adxl345_read:
   667  0076                     ??_main:	
   668                           ; 1 bytes @ 0x6
   669                           
   670  0076                     ??_I2C_Master_Write:	
   671                           ; 1 bytes @ 0x6
   672                           
   673                           
   674                           ; 1 bytes @ 0x6
   675  0076                     	ds	1
   676                           
   677                           	psect	cstackBANK0
   678  0020                     __pcstackBANK0:
   679  0020                     ??_I2C_Master_Read:
   680  0020                     ?___aldiv:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0020                     ___aldiv@divisor:	
   684                           ; 4 bytes @ 0x0
   685                           
   686                           
   687                           ; 4 bytes @ 0x0
   688  0020                     	ds	2
   689  0022                     I2C_Master_Read@temp:
   690                           
   691                           ; 2 bytes @ 0x2
   692  0022                     	ds	2
   693  0024                     ?_adxl345_read:
   694  0024                     adxl345_read@add:	
   695                           ; 2 bytes @ 0x4
   696                           
   697  0024                     ___aldiv@dividend:	
   698                           ; 2 bytes @ 0x4
   699                           
   700                           
   701                           ; 4 bytes @ 0x4
   702  0024                     	ds	2
   703  0026                     adxl345_read@retval:
   704                           
   705                           ; 2 bytes @ 0x6
   706  0026                     	ds	2
   707  0028                     ___aldiv@counter:
   708                           
   709                           ; 1 bytes @ 0x8
   710  0028                     	ds	1
   711  0029                     ___aldiv@sign:
   712                           
   713                           ; 1 bytes @ 0x9
   714  0029                     	ds	1
   715  002A                     ___aldiv@quotient:
   716                           
   717                           ; 4 bytes @ 0xA
   718  002A                     	ds	4
   719  002E                     ?_COM_EUSART:
   720  002E                     COM_EUSART@baudrate:	
   721                           ; 1 bytes @ 0xE
   722                           
   723                           
   724                           ; 4 bytes @ 0xE
   725  002E                     	ds	4
   726  0032                     ??_COM_EUSART:
   727                           
   728                           ; 1 bytes @ 0x12
   729  0032                     	ds	12
   730  003E                     COM_EUSART@p:
   731                           
   732                           ; 4 bytes @ 0x1E
   733  003E                     	ds	4
   734                           
   735                           	psect	maintext
   736  00C1                     __pmaintext:	
   737 ;;
   738 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   739 ;;
   740 ;; *************** function _main *****************
   741 ;; Defined at:
   742 ;;		line 49 in file "mini2.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : B00/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0
   758 ;;      Temps:          1       0       0       0       0
   759 ;;      Totals:         1       0       0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels required when called:    4
   762 ;; This function calls:
   763 ;;		_COM_EUSART
   764 ;;		_adxl345_read
   765 ;;		_con_mp2
   766 ;; This function is called by:
   767 ;;		Startup code after reset
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _main
   773  00C1                     _main:
   774  00C1                     l1136:	
   775                           ;incstack = 0
   776                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   777                           
   778                           
   779                           ;mini2.c: 50:     con_mp2();
   780  00C1  120A  118A  225E  120A  118A  	fcall	_con_mp2
   781  00C6                     l1138:
   782                           
   783                           ;mini2.c: 51:     COM_EUSART(9600);
   784  00C6  3000               	movlw	0
   785  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   786  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   787  00C9  00B1               	movwf	COM_EUSART@baudrate+3
   788  00CA  3000               	movlw	0
   789  00CB  00B0               	movwf	COM_EUSART@baudrate+2
   790  00CC  3025               	movlw	37
   791  00CD  00AF               	movwf	COM_EUSART@baudrate+1
   792  00CE  3080               	movlw	128
   793  00CF  00AE               	movwf	COM_EUSART@baudrate
   794  00D0  120A  118A  2154  120A  118A  	fcall	_COM_EUSART
   795  00D5                     l1140:
   796                           
   797                           ;mini2.c: 55:         if (leer == 1) {
   798  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   799  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   800  00D7  034C               	decf	_leer,w
   801  00D8  044D               	iorwf	_leer+1,w
   802  00D9  1D03               	btfss	3,2
   803  00DA  28DC               	goto	u671
   804  00DB  28DD               	goto	u670
   805  00DC                     u671:
   806  00DC  28DE               	goto	l1144
   807  00DD                     u670:
   808  00DD                     l1142:
   809                           
   810                           ;mini2.c: 56:             PORTEbits.RE0 = 0;
   811  00DD  1009               	bcf	9,0	;volatile
   812  00DE                     l1144:
   813                           
   814                           ;mini2.c: 58:         if (leer == 2) {
   815  00DE  3002               	movlw	2
   816  00DF  064C               	xorwf	_leer,w
   817  00E0  044D               	iorwf	_leer+1,w
   818  00E1  1D03               	btfss	3,2
   819  00E2  28E4               	goto	u681
   820  00E3  28E5               	goto	u680
   821  00E4                     u681:
   822  00E4  28E6               	goto	l1148
   823  00E5                     u680:
   824  00E5                     l1146:
   825                           
   826                           ;mini2.c: 59:             PORTEbits.RE0 = 1;
   827  00E5  1409               	bsf	9,0	;volatile
   828  00E6                     l1148:
   829                           
   830                           ;mini2.c: 61:         if (leer == 3) {
   831  00E6  3003               	movlw	3
   832  00E7  064C               	xorwf	_leer,w
   833  00E8  044D               	iorwf	_leer+1,w
   834  00E9  1D03               	btfss	3,2
   835  00EA  28EC               	goto	u691
   836  00EB  28ED               	goto	u690
   837  00EC                     u691:
   838  00EC  28EE               	goto	l1152
   839  00ED                     u690:
   840  00ED                     l1150:
   841                           
   842                           ;mini2.c: 62:             PORTEbits.RE1 = 0;
   843  00ED  1089               	bcf	9,1	;volatile
   844  00EE                     l1152:
   845                           
   846                           ;mini2.c: 64:         if (leer == 4) {
   847  00EE  3004               	movlw	4
   848  00EF  064C               	xorwf	_leer,w
   849  00F0  044D               	iorwf	_leer+1,w
   850  00F1  1D03               	btfss	3,2
   851  00F2  28F4               	goto	u701
   852  00F3  28F5               	goto	u700
   853  00F4                     u701:
   854  00F4  28F6               	goto	l1156
   855  00F5                     u700:
   856  00F5                     l1154:
   857                           
   858                           ;mini2.c: 65:             PORTEbits.RE1 = 1;
   859  00F5  1489               	bsf	9,1	;volatile
   860  00F6                     l1156:
   861                           
   862                           ;mini2.c: 67:         giros[0] = adxl345_read(0x32);
   863  00F6  3032               	movlw	50
   864  00F7  00A4               	movwf	adxl345_read@add
   865  00F8  3000               	movlw	0
   866  00F9  00A5               	movwf	adxl345_read@add+1
   867  00FA  120A  118A  21C1  120A  118A  	fcall	_adxl345_read
   868  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   869  0100  1303               	bcf	3,6	;RP1=0, select bank0
   870  0101  0824               	movf	?_adxl345_read,w
   871  0102  00F6               	movwf	??_main
   872  0103  0876               	movf	??_main,w
   873  0104  00C2               	movwf	_giros
   874                           
   875                           ;mini2.c: 68:         giros[1] = adxl345_read(0x33);
   876  0105  3033               	movlw	51
   877  0106  00A4               	movwf	adxl345_read@add
   878  0107  3000               	movlw	0
   879  0108  00A5               	movwf	adxl345_read@add+1
   880  0109  120A  118A  21C1  120A  118A  	fcall	_adxl345_read
   881  010E  1283               	bcf	3,5	;RP0=0, select bank0
   882  010F  1303               	bcf	3,6	;RP1=0, select bank0
   883  0110  0824               	movf	?_adxl345_read,w
   884  0111  00F6               	movwf	??_main
   885  0112  0876               	movf	??_main,w
   886  0113  00C3               	movwf	_giros+1
   887                           
   888                           ;mini2.c: 69:         giros[2] = adxl345_read(0x34);
   889  0114  3034               	movlw	52
   890  0115  00A4               	movwf	adxl345_read@add
   891  0116  3000               	movlw	0
   892  0117  00A5               	movwf	adxl345_read@add+1
   893  0118  120A  118A  21C1  120A  118A  	fcall	_adxl345_read
   894  011D  1283               	bcf	3,5	;RP0=0, select bank0
   895  011E  1303               	bcf	3,6	;RP1=0, select bank0
   896  011F  0824               	movf	?_adxl345_read,w
   897  0120  00F6               	movwf	??_main
   898  0121  0876               	movf	??_main,w
   899  0122  00C4               	movwf	_giros+2
   900                           
   901                           ;mini2.c: 70:         giros[3] = adxl345_read(0x35);
   902  0123  3035               	movlw	53
   903  0124  00A4               	movwf	adxl345_read@add
   904  0125  3000               	movlw	0
   905  0126  00A5               	movwf	adxl345_read@add+1
   906  0127  120A  118A  21C1  120A  118A  	fcall	_adxl345_read
   907  012C  1283               	bcf	3,5	;RP0=0, select bank0
   908  012D  1303               	bcf	3,6	;RP1=0, select bank0
   909  012E  0824               	movf	?_adxl345_read,w
   910  012F  00F6               	movwf	??_main
   911  0130  0876               	movf	??_main,w
   912  0131  00C5               	movwf	_giros+3
   913                           
   914                           ;mini2.c: 71:         giros[4] = adxl345_read(0x36);
   915  0132  3036               	movlw	54
   916  0133  00A4               	movwf	adxl345_read@add
   917  0134  3000               	movlw	0
   918  0135  00A5               	movwf	adxl345_read@add+1
   919  0136  120A  118A  21C1  120A  118A  	fcall	_adxl345_read
   920  013B  1283               	bcf	3,5	;RP0=0, select bank0
   921  013C  1303               	bcf	3,6	;RP1=0, select bank0
   922  013D  0824               	movf	?_adxl345_read,w
   923  013E  00F6               	movwf	??_main
   924  013F  0876               	movf	??_main,w
   925  0140  00C6               	movwf	_giros+4
   926                           
   927                           ;mini2.c: 72:         giros[5] = adxl345_read(0x37);
   928  0141  3037               	movlw	55
   929  0142  00A4               	movwf	adxl345_read@add
   930  0143  3000               	movlw	0
   931  0144  00A5               	movwf	adxl345_read@add+1
   932  0145  120A  118A  21C1  120A  118A  	fcall	_adxl345_read
   933  014A  1283               	bcf	3,5	;RP0=0, select bank0
   934  014B  1303               	bcf	3,6	;RP1=0, select bank0
   935  014C  0824               	movf	?_adxl345_read,w
   936  014D  00F6               	movwf	??_main
   937  014E  0876               	movf	??_main,w
   938  014F  00C7               	movwf	_giros+5
   939  0150  28D5               	goto	l1140
   940  0151  120A  118A  280C   	ljmp	start
   941  0154                     __end_of_main:
   942                           
   943                           	psect	text1
   944  025E                     __ptext1:	
   945 ;; *************** function _con_mp2 *****************
   946 ;; Defined at:
   947 ;;		line 28 in file "CONM2.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		status,2
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _con_mp2
   977  025E                     _con_mp2:
   978  025E                     l984:	
   979                           ;incstack = 0
   980                           ; Regs used in _con_mp2: [status,2]
   981                           
   982  025E  1683               	bsf	3,5	;RP0=1, select bank3
   983  025F  1703               	bsf	3,6	;RP1=1, select bank3
   984  0260  0188               	clrf	8	;volatile
   985  0261  0189               	clrf	9	;volatile
   986  0262  1683               	bsf	3,5	;RP0=1, select bank1
   987  0263  1303               	bcf	3,6	;RP1=0, select bank1
   988  0264  0185               	clrf	5	;volatile
   989  0265  1283               	bcf	3,5	;RP0=0, select bank0
   990  0266  1303               	bcf	3,6	;RP1=0, select bank0
   991  0267  0185               	clrf	5	;volatile
   992  0268  1683               	bsf	3,5	;RP0=1, select bank1
   993  0269  1303               	bcf	3,6	;RP1=0, select bank1
   994  026A  0186               	clrf	6	;volatile
   995  026B  1283               	bcf	3,5	;RP0=0, select bank0
   996  026C  1303               	bcf	3,6	;RP1=0, select bank0
   997  026D  0186               	clrf	6	;volatile
   998  026E  1683               	bsf	3,5	;RP0=1, select bank1
   999  026F  1303               	bcf	3,6	;RP1=0, select bank1
  1000  0270  0188               	clrf	8	;volatile
  1001  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0273  0188               	clrf	8	;volatile
  1004  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1005  0275  1303               	bcf	3,6	;RP1=0, select bank1
  1006  0276  0189               	clrf	9	;volatile
  1007  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0279  0189               	clrf	9	;volatile
  1010  027A                     l986:
  1011  027A  1683               	bsf	3,5	;RP0=1, select bank1
  1012  027B  1303               	bcf	3,6	;RP1=0, select bank1
  1013  027C  1387               	bcf	7,7	;volatile
  1014  027D                     l988:
  1015  027D  178B               	bsf	11,7	;volatile
  1016  027E                     l990:
  1017  027E  170B               	bsf	11,6	;volatile
  1018  027F                     l992:
  1019  027F  168C               	bsf	12,5	;volatile
  1020  0280                     l994:
  1021  0280  160C               	bsf	12,4	;volatile
  1022  0281  0196               	clrf	22	;volatile
  1023  0282                     l42:
  1024  0282  0008               	return
  1025  0283                     __end_of_con_mp2:
  1026                           
  1027                           	psect	text2
  1028  01C1                     __ptext2:	
  1029 ;; *************** function _adxl345_read *****************
  1030 ;; Defined at:
  1031 ;;		line 27 in file "giros.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  add             2    4[BANK0 ] int 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  retval          2    6[BANK0 ] int 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2    4[BANK0 ] int 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       2       0       0       0
  1046 ;;      Locals:         0       2       0       0       0
  1047 ;;      Temps:          0       0       0       0       0
  1048 ;;      Totals:         0       4       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    3
  1052 ;; This function calls:
  1053 ;;		_I2C_Master_Read
  1054 ;;		_I2C_Master_Start
  1055 ;;		_I2C_Master_Stop
  1056 ;;		_I2C_Master_Write
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _adxl345_read
  1064  01C1                     _adxl345_read:
  1065  01C1                     l1128:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _adxl345_read: [wreg+status,2+status,0+pclath+cstack]
  1068                           
  1069                           
  1070                           ;giros.c: 28:          int retval;;giros.c: 29:          I2C_Master_Start();
  1071  01C1  120A  118A  22A3  120A  118A  	fcall	_I2C_Master_Start
  1072                           
  1073                           ;giros.c: 30:          I2C_Master_Write(0xA6);
  1074  01C6  30A6               	movlw	166
  1075  01C7  00F4               	movwf	I2C_Master_Write@d
  1076  01C8  3000               	movlw	0
  1077  01C9  00F5               	movwf	I2C_Master_Write@d+1
  1078  01CA  120A  118A  2290  120A  118A  	fcall	_I2C_Master_Write
  1079                           
  1080                           ;giros.c: 31:          I2C_Master_Write(add);
  1081  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1082  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1083  01D1  0825               	movf	adxl345_read@add+1,w
  1084  01D2  00F5               	movwf	I2C_Master_Write@d+1
  1085  01D3  0824               	movf	adxl345_read@add,w
  1086  01D4  00F4               	movwf	I2C_Master_Write@d
  1087  01D5  120A  118A  2290  120A  118A  	fcall	_I2C_Master_Write
  1088                           
  1089                           ;giros.c: 32:          I2C_Master_Start();
  1090  01DA  120A  118A  22A3  120A  118A  	fcall	_I2C_Master_Start
  1091                           
  1092                           ;giros.c: 33:          I2C_Master_Write(0xA7);
  1093  01DF  30A7               	movlw	167
  1094  01E0  00F4               	movwf	I2C_Master_Write@d
  1095  01E1  3000               	movlw	0
  1096  01E2  00F5               	movwf	I2C_Master_Write@d+1
  1097  01E3  120A  118A  2290  120A  118A  	fcall	_I2C_Master_Write
  1098                           
  1099                           ;giros.c: 34:          retval=I2C_Master_Read(0);
  1100  01E8  3000               	movlw	0
  1101  01E9  00F4               	movwf	I2C_Master_Read@a
  1102  01EA  00F5               	movwf	I2C_Master_Read@a+1
  1103  01EB  120A  118A  2202  120A  118A  	fcall	_I2C_Master_Read
  1104  01F0  0875               	movf	?_I2C_Master_Read+1,w
  1105  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1106  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1107  01F3  00A7               	movwf	adxl345_read@retval+1
  1108  01F4  0874               	movf	?_I2C_Master_Read,w
  1109  01F5  00A6               	movwf	adxl345_read@retval
  1110                           
  1111                           ;giros.c: 35:          I2C_Master_Stop();
  1112  01F6  120A  118A  229A  120A  118A  	fcall	_I2C_Master_Stop
  1113  01FB                     l1130:
  1114                           
  1115                           ;giros.c: 36:          return retval;
  1116  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1117  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1118  01FD  0827               	movf	adxl345_read@retval+1,w
  1119  01FE  00A5               	movwf	?_adxl345_read+1
  1120  01FF  0826               	movf	adxl345_read@retval,w
  1121  0200  00A4               	movwf	?_adxl345_read
  1122  0201                     l153:
  1123  0201  0008               	return
  1124  0202                     __end_of_adxl345_read:
  1125                           
  1126                           	psect	text3
  1127  0290                     __ptext3:	
  1128 ;; *************** function _I2C_Master_Write *****************
  1129 ;; Defined at:
  1130 ;;		line 43 in file "I2C.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  d               2    4[COMMON] int 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         2       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0
  1147 ;;      Totals:         2       0       0       0       0
  1148 ;;Total ram usage:        2 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    2
  1151 ;; This function calls:
  1152 ;;		_I2C_Master_Wait
  1153 ;; This function is called by:
  1154 ;;		_adxl345_read
  1155 ;;		_adxl345_write
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _I2C_Master_Write
  1161  0290                     _I2C_Master_Write:
  1162  0290                     l1060:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1165                           
  1166                           
  1167                           ;I2C.c: 43: void I2C_Master_Write(int d);I2C.c: 44: {;I2C.c: 45:   I2C_Master_Wait();
  1168  0290  120A  118A  2283  120A  118A  	fcall	_I2C_Master_Wait
  1169  0295                     l1062:
  1170                           
  1171                           ;I2C.c: 46:   SSPBUF = d;
  1172  0295  0874               	movf	I2C_Master_Write@d,w
  1173  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1175  0298  0093               	movwf	19	;volatile
  1176  0299                     l134:
  1177  0299  0008               	return
  1178  029A                     __end_of_I2C_Master_Write:
  1179                           
  1180                           	psect	text4
  1181  029A                     __ptext4:	
  1182 ;; *************** function _I2C_Master_Stop *****************
  1183 ;; Defined at:
  1184 ;;		line 36 in file "I2C.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    2
  1205 ;; This function calls:
  1206 ;;		_I2C_Master_Wait
  1207 ;; This function is called by:
  1208 ;;		_adxl345_read
  1209 ;;		_adxl345_write
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _I2C_Master_Stop
  1215  029A                     _I2C_Master_Stop:
  1216  029A                     l1056:	
  1217                           ;incstack = 0
  1218                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1219                           
  1220                           
  1221                           ;I2C.c: 38:   I2C_Master_Wait();
  1222  029A  120A  118A  2283  120A  118A  	fcall	_I2C_Master_Wait
  1223  029F                     l1058:
  1224                           
  1225                           ;I2C.c: 39:   PEN = 1;
  1226  029F  1683               	bsf	3,5	;RP0=1, select bank1
  1227  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  1228  02A1  1511               	bsf	17,2	;volatile
  1229  02A2                     l131:
  1230  02A2  0008               	return
  1231  02A3                     __end_of_I2C_Master_Stop:
  1232                           
  1233                           	psect	text5
  1234  02A3                     __ptext5:	
  1235 ;; *************** function _I2C_Master_Start *****************
  1236 ;; Defined at:
  1237 ;;		line 29 in file "I2C.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0
  1254 ;;      Totals:         0       0       0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    2
  1258 ;; This function calls:
  1259 ;;		_I2C_Master_Wait
  1260 ;; This function is called by:
  1261 ;;		_adxl345_read
  1262 ;;		_adxl345_write
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _I2C_Master_Start
  1268  02A3                     _I2C_Master_Start:
  1269  02A3                     l1052:	
  1270                           ;incstack = 0
  1271                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1272                           
  1273                           
  1274                           ;I2C.c: 31:   I2C_Master_Wait();
  1275  02A3  120A  118A  2283  120A  118A  	fcall	_I2C_Master_Wait
  1276  02A8                     l1054:
  1277                           
  1278                           ;I2C.c: 32:   SEN = 1;
  1279  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1280  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1281  02AA  1411               	bsf	17,0	;volatile
  1282  02AB                     l128:
  1283  02AB  0008               	return
  1284  02AC                     __end_of_I2C_Master_Start:
  1285                           
  1286                           	psect	text6
  1287  0202                     __ptext6:	
  1288 ;; *************** function _I2C_Master_Read *****************
  1289 ;; Defined at:
  1290 ;;		line 50 in file "I2C.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  a               2    4[COMMON] int 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  temp            2    2[BANK0 ] int 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  2    4[COMMON] int 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         2       0       0       0       0
  1305 ;;      Locals:         0       2       0       0       0
  1306 ;;      Temps:          0       2       0       0       0
  1307 ;;      Totals:         2       4       0       0       0
  1308 ;;Total ram usage:        6 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    2
  1311 ;; This function calls:
  1312 ;;		_I2C_Master_Wait
  1313 ;; This function is called by:
  1314 ;;		_adxl345_read
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _I2C_Master_Read
  1320  0202                     _I2C_Master_Read:
  1321  0202                     l1064:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1324                           
  1325                           
  1326                           ;I2C.c: 50: int I2C_Master_Read(int a);I2C.c: 51: {;I2C.c: 52:   int temp;;I2C.c: 53:   
      +                          I2C_Master_Wait();
  1327  0202  120A  118A  2283  120A  118A  	fcall	_I2C_Master_Wait
  1328  0207                     l1066:
  1329                           
  1330                           ;I2C.c: 54:   RCEN = 1;
  1331  0207  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0208  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0209  1591               	bsf	17,3	;volatile
  1334                           
  1335                           ;I2C.c: 55:   I2C_Master_Wait();
  1336  020A  120A  118A  2283  120A  118A  	fcall	_I2C_Master_Wait
  1337  020F                     l1068:
  1338                           
  1339                           ;I2C.c: 56:   temp = SSPBUF;
  1340  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0211  0813               	movf	19,w	;volatile
  1343  0212  00A0               	movwf	??_I2C_Master_Read
  1344  0213  01A1               	clrf	??_I2C_Master_Read+1
  1345  0214  0820               	movf	??_I2C_Master_Read,w
  1346  0215  00A2               	movwf	I2C_Master_Read@temp
  1347  0216  0821               	movf	??_I2C_Master_Read+1,w
  1348  0217  00A3               	movwf	I2C_Master_Read@temp+1
  1349  0218                     l1070:
  1350                           
  1351                           ;I2C.c: 57:   I2C_Master_Wait();
  1352  0218  120A  118A  2283  120A  118A  	fcall	_I2C_Master_Wait
  1353  021D                     l1072:
  1354                           
  1355                           ;I2C.c: 58:   ACKDT = (a)?0:1;
  1356  021D  0874               	movf	I2C_Master_Read@a,w
  1357  021E  0475               	iorwf	I2C_Master_Read@a+1,w
  1358  021F  1903               	btfsc	3,2
  1359  0220  2A22               	goto	u521
  1360  0221  2A26               	goto	u520
  1361  0222                     u521:
  1362  0222  1683               	bsf	3,5	;RP0=1, select bank1
  1363  0223  1303               	bcf	3,6	;RP1=0, select bank1
  1364  0224  1691               	bsf	17,5	;volatile
  1365  0225  2A29               	goto	u534
  1366  0226                     u520:
  1367  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0228  1291               	bcf	17,5	;volatile
  1370  0229                     u534:
  1371  0229                     l1074:
  1372                           
  1373                           ;I2C.c: 59:   ACKEN = 1;
  1374  0229  1611               	bsf	17,4	;volatile
  1375  022A                     l1076:
  1376                           
  1377                           ;I2C.c: 60:   return temp;
  1378  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1379  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1380  022C  0823               	movf	I2C_Master_Read@temp+1,w
  1381  022D  00F5               	movwf	?_I2C_Master_Read+1
  1382  022E  0822               	movf	I2C_Master_Read@temp,w
  1383  022F  00F4               	movwf	?_I2C_Master_Read
  1384  0230                     l137:
  1385  0230  0008               	return
  1386  0231                     __end_of_I2C_Master_Read:
  1387                           
  1388                           	psect	text7
  1389  0283                     __ptext7:	
  1390 ;; *************** function _I2C_Master_Wait *****************
  1391 ;; Defined at:
  1392 ;;		line 23 in file "I2C.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_I2C_Master_Start
  1417 ;;		_I2C_Master_Stop
  1418 ;;		_I2C_Master_Write
  1419 ;;		_I2C_Master_Read
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _I2C_Master_Wait
  1425  0283                     _I2C_Master_Wait:
  1426  0283                     l1048:	
  1427                           ;incstack = 0
  1428                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1429                           
  1430  0283                     l122:	
  1431                           ;I2C.c: 25:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1432                           
  1433  0283  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0284  1303               	bcf	3,6	;RP1=0, select bank1
  1435  0285  1914               	btfsc	20,2	;volatile
  1436  0286  2A88               	goto	u501
  1437  0287  2A89               	goto	u500
  1438  0288                     u501:
  1439  0288  2A83               	goto	l122
  1440  0289                     u500:
  1441  0289                     l1050:
  1442  0289  0811               	movf	17,w	;volatile
  1443  028A  391F               	andlw	31
  1444  028B  1D03               	btfss	3,2
  1445  028C  2A8E               	goto	u511
  1446  028D  2A8F               	goto	u510
  1447  028E                     u511:
  1448  028E  2A83               	goto	l122
  1449  028F                     u510:
  1450  028F                     l125:
  1451  028F  0008               	return
  1452  0290                     __end_of_I2C_Master_Wait:
  1453                           
  1454                           	psect	text8
  1455  0154                     __ptext8:	
  1456 ;; *************** function _COM_EUSART *****************
  1457 ;; Defined at:
  1458 ;;		line 5 in file "UART.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  baudrate        4   14[BANK0 ] const long 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  p               4   30[BANK0 ] long 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       4       0       0       0
  1473 ;;      Locals:         0       4       0       0       0
  1474 ;;      Temps:          0      12       0       0       0
  1475 ;;      Totals:         0      20       0       0       0
  1476 ;;Total ram usage:       20 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    2
  1479 ;; This function calls:
  1480 ;;		___aldiv
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _COM_EUSART
  1488  0154                     _COM_EUSART:
  1489  0154                     l1120:	
  1490                           ;incstack = 0
  1491                           ; Regs used in _COM_EUSART: [wreg+status,2+status,0+pclath+cstack]
  1492                           
  1493                           
  1494                           ;UART.c: 6:     long int p;;UART.c: 7:     TXSTA = 0b00100000;
  1495  0154  3020               	movlw	32
  1496  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0157  0098               	movwf	24	;volatile
  1499  0158                     l1122:
  1500                           
  1501                           ;UART.c: 8:     BAUDCTLbits.BRG16 = 0;
  1502  0158  1683               	bsf	3,5	;RP0=1, select bank3
  1503  0159  1703               	bsf	3,6	;RP1=1, select bank3
  1504  015A  1187               	bcf	7,3	;volatile
  1505                           
  1506                           ;UART.c: 9:     RCSTA= 0b10010000;
  1507  015B  3090               	movlw	144
  1508  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1509  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1510  015E  0098               	movwf	24	;volatile
  1511  015F                     l1124:
  1512                           
  1513                           ;UART.c: 10:     p = (8000000 - baudrate*64)/(baudrate*64);
  1514  015F  082E               	movf	COM_EUSART@baudrate,w
  1515  0160  00B2               	movwf	??_COM_EUSART
  1516  0161  082F               	movf	COM_EUSART@baudrate+1,w
  1517  0162  00B3               	movwf	??_COM_EUSART+1
  1518  0163  0830               	movf	COM_EUSART@baudrate+2,w
  1519  0164  00B4               	movwf	??_COM_EUSART+2
  1520  0165  0831               	movf	COM_EUSART@baudrate+3,w
  1521  0166  00B5               	movwf	??_COM_EUSART+3
  1522  0167  3006               	movlw	6
  1523  0168                     u645:
  1524  0168  1003               	clrc
  1525  0169  0DB2               	rlf	??_COM_EUSART,f
  1526  016A  0DB3               	rlf	??_COM_EUSART+1,f
  1527  016B  0DB4               	rlf	??_COM_EUSART+2,f
  1528  016C  0DB5               	rlf	??_COM_EUSART+3,f
  1529  016D                     u640:
  1530  016D  3EFF               	addlw	-1
  1531  016E  1D03               	skipz
  1532  016F  2968               	goto	u645
  1533  0170  0835               	movf	??_COM_EUSART+3,w
  1534  0171  00A3               	movwf	___aldiv@divisor+3
  1535  0172  0834               	movf	??_COM_EUSART+2,w
  1536  0173  00A2               	movwf	___aldiv@divisor+2
  1537  0174  0833               	movf	??_COM_EUSART+1,w
  1538  0175  00A1               	movwf	___aldiv@divisor+1
  1539  0176  0832               	movf	??_COM_EUSART,w
  1540  0177  00A0               	movwf	___aldiv@divisor
  1541  0178  082E               	movf	COM_EUSART@baudrate,w
  1542  0179  00B6               	movwf	??_COM_EUSART+4
  1543  017A  082F               	movf	COM_EUSART@baudrate+1,w
  1544  017B  00B7               	movwf	??_COM_EUSART+5
  1545  017C  0830               	movf	COM_EUSART@baudrate+2,w
  1546  017D  00B8               	movwf	??_COM_EUSART+6
  1547  017E  0831               	movf	COM_EUSART@baudrate+3,w
  1548  017F  00B9               	movwf	??_COM_EUSART+7
  1549  0180  3006               	movlw	6
  1550  0181                     u655:
  1551  0181  1003               	clrc
  1552  0182  0DB6               	rlf	??_COM_EUSART+4,f
  1553  0183  0DB7               	rlf	??_COM_EUSART+5,f
  1554  0184  0DB8               	rlf	??_COM_EUSART+6,f
  1555  0185  0DB9               	rlf	??_COM_EUSART+7,f
  1556  0186                     u650:
  1557  0186  3EFF               	addlw	-1
  1558  0187  1D03               	skipz
  1559  0188  2981               	goto	u655
  1560  0189  3000               	movlw	0
  1561  018A  00BA               	movwf	??_COM_EUSART+8
  1562  018B  3012               	movlw	18
  1563  018C  00BB               	movwf	??_COM_EUSART+9
  1564  018D  307A               	movlw	122
  1565  018E  00BC               	movwf	??_COM_EUSART+10
  1566  018F  3000               	movlw	0
  1567  0190  00BD               	movwf	??_COM_EUSART+11
  1568  0191  0836               	movf	??_COM_EUSART+4,w
  1569  0192  02BA               	subwf	??_COM_EUSART+8,f
  1570  0193  0837               	movf	??_COM_EUSART+5,w
  1571  0194  1C03               	skipc
  1572  0195  0F37               	incfsz	??_COM_EUSART+5,w
  1573  0196  2998               	goto	u661
  1574  0197  2999               	goto	u662
  1575  0198                     u661:
  1576  0198  02BB               	subwf	??_COM_EUSART+9,f
  1577  0199                     u662:
  1578  0199  0838               	movf	??_COM_EUSART+6,w
  1579  019A  1C03               	skipc
  1580  019B  0F38               	incfsz	??_COM_EUSART+6,w
  1581  019C  299E               	goto	u663
  1582  019D  299F               	goto	u664
  1583  019E                     u663:
  1584  019E  02BC               	subwf	??_COM_EUSART+10,f
  1585  019F                     u664:
  1586  019F  0839               	movf	??_COM_EUSART+7,w
  1587  01A0  1C03               	skipc
  1588  01A1  0F39               	incfsz	??_COM_EUSART+7,w
  1589  01A2  29A4               	goto	u665
  1590  01A3  29A5               	goto	u666
  1591  01A4                     u665:
  1592  01A4  02BD               	subwf	??_COM_EUSART+11,f
  1593  01A5                     u666:
  1594  01A5  083D               	movf	??_COM_EUSART+11,w
  1595  01A6  00A7               	movwf	___aldiv@dividend+3
  1596  01A7  083C               	movf	??_COM_EUSART+10,w
  1597  01A8  00A6               	movwf	___aldiv@dividend+2
  1598  01A9  083B               	movf	??_COM_EUSART+9,w
  1599  01AA  00A5               	movwf	___aldiv@dividend+1
  1600  01AB  083A               	movf	??_COM_EUSART+8,w
  1601  01AC  00A4               	movwf	___aldiv@dividend
  1602  01AD  120A  118A  2024  120A  118A  	fcall	___aldiv
  1603  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1604  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1605  01B4  0823               	movf	?___aldiv+3,w
  1606  01B5  00C1               	movwf	COM_EUSART@p+3
  1607  01B6  0822               	movf	?___aldiv+2,w
  1608  01B7  00C0               	movwf	COM_EUSART@p+2
  1609  01B8  0821               	movf	?___aldiv+1,w
  1610  01B9  00BF               	movwf	COM_EUSART@p+1
  1611  01BA  0820               	movf	?___aldiv,w
  1612  01BB  00BE               	movwf	COM_EUSART@p
  1613  01BC                     l1126:
  1614                           
  1615                           ;UART.c: 11:     SPBRG = p;
  1616  01BC  083E               	movf	COM_EUSART@p,w
  1617  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1618  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1619  01BF  0099               	movwf	25	;volatile
  1620  01C0                     l11:
  1621  01C0  0008               	return
  1622  01C1                     __end_of_COM_EUSART:
  1623                           
  1624                           	psect	text9
  1625  0024                     __ptext9:	
  1626 ;; *************** function ___aldiv *****************
  1627 ;; Defined at:
  1628 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  divisor         4    0[BANK0 ] long 
  1631 ;;  dividend        4    4[BANK0 ] long 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  quotient        4   10[BANK0 ] long 
  1634 ;;  sign            1    9[BANK0 ] unsigned char 
  1635 ;;  counter         1    8[BANK0 ] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  4    0[BANK0 ] long 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       8       0       0       0
  1646 ;;      Locals:         0       6       0       0       0
  1647 ;;      Temps:          1       0       0       0       0
  1648 ;;      Totals:         1      14       0       0       0
  1649 ;;Total ram usage:       15 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_COM_EUSART
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function ___aldiv
  1661  0024                     ___aldiv:
  1662  0024                     l1080:	
  1663                           ;incstack = 0
  1664                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1665                           
  1666  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0026  01A9               	clrf	___aldiv@sign
  1669  0027                     l1082:
  1670  0027  1FA3               	btfss	___aldiv@divisor+3,7
  1671  0028  282A               	goto	u541
  1672  0029  282B               	goto	u540
  1673  002A                     u541:
  1674  002A  2838               	goto	l307
  1675  002B                     u540:
  1676  002B                     l1084:
  1677  002B  09A0               	comf	___aldiv@divisor,f
  1678  002C  09A1               	comf	___aldiv@divisor+1,f
  1679  002D  09A2               	comf	___aldiv@divisor+2,f
  1680  002E  09A3               	comf	___aldiv@divisor+3,f
  1681  002F  0AA0               	incf	___aldiv@divisor,f
  1682  0030  1903               	skipnz
  1683  0031  0AA1               	incf	___aldiv@divisor+1,f
  1684  0032  1903               	skipnz
  1685  0033  0AA2               	incf	___aldiv@divisor+2,f
  1686  0034  1903               	skipnz
  1687  0035  0AA3               	incf	___aldiv@divisor+3,f
  1688  0036  01A9               	clrf	___aldiv@sign
  1689  0037  0AA9               	incf	___aldiv@sign,f
  1690  0038                     l307:
  1691  0038  1FA7               	btfss	___aldiv@dividend+3,7
  1692  0039  283B               	goto	u551
  1693  003A  283C               	goto	u550
  1694  003B                     u551:
  1695  003B  284B               	goto	l1090
  1696  003C                     u550:
  1697  003C                     l1086:
  1698  003C  09A4               	comf	___aldiv@dividend,f
  1699  003D  09A5               	comf	___aldiv@dividend+1,f
  1700  003E  09A6               	comf	___aldiv@dividend+2,f
  1701  003F  09A7               	comf	___aldiv@dividend+3,f
  1702  0040  0AA4               	incf	___aldiv@dividend,f
  1703  0041  1903               	skipnz
  1704  0042  0AA5               	incf	___aldiv@dividend+1,f
  1705  0043  1903               	skipnz
  1706  0044  0AA6               	incf	___aldiv@dividend+2,f
  1707  0045  1903               	skipnz
  1708  0046  0AA7               	incf	___aldiv@dividend+3,f
  1709  0047                     l1088:
  1710  0047  3001               	movlw	1
  1711  0048  00F4               	movwf	??___aldiv
  1712  0049  0874               	movf	??___aldiv,w
  1713  004A  06A9               	xorwf	___aldiv@sign,f
  1714  004B                     l1090:
  1715  004B  3000               	movlw	0
  1716  004C  00AD               	movwf	___aldiv@quotient+3
  1717  004D  3000               	movlw	0
  1718  004E  00AC               	movwf	___aldiv@quotient+2
  1719  004F  3000               	movlw	0
  1720  0050  00AB               	movwf	___aldiv@quotient+1
  1721  0051  3000               	movlw	0
  1722  0052  00AA               	movwf	___aldiv@quotient
  1723  0053                     l1092:
  1724  0053  0823               	movf	___aldiv@divisor+3,w
  1725  0054  0422               	iorwf	___aldiv@divisor+2,w
  1726  0055  0421               	iorwf	___aldiv@divisor+1,w
  1727  0056  0420               	iorwf	___aldiv@divisor,w
  1728  0057  1903               	skipnz
  1729  0058  285A               	goto	u561
  1730  0059  285B               	goto	u560
  1731  005A                     u561:
  1732  005A  28A8               	goto	l1112
  1733  005B                     u560:
  1734  005B                     l1094:
  1735  005B  01A8               	clrf	___aldiv@counter
  1736  005C  0AA8               	incf	___aldiv@counter,f
  1737  005D  286B               	goto	l1098
  1738  005E                     l1096:
  1739  005E  3001               	movlw	1
  1740  005F  00F4               	movwf	??___aldiv
  1741  0060                     u575:
  1742  0060  1003               	clrc
  1743  0061  0DA0               	rlf	___aldiv@divisor,f
  1744  0062  0DA1               	rlf	___aldiv@divisor+1,f
  1745  0063  0DA2               	rlf	___aldiv@divisor+2,f
  1746  0064  0DA3               	rlf	___aldiv@divisor+3,f
  1747  0065  0BF4               	decfsz	??___aldiv,f
  1748  0066  2860               	goto	u575
  1749  0067  3001               	movlw	1
  1750  0068  00F4               	movwf	??___aldiv
  1751  0069  0874               	movf	??___aldiv,w
  1752  006A  07A8               	addwf	___aldiv@counter,f
  1753  006B                     l1098:
  1754  006B  1FA3               	btfss	___aldiv@divisor+3,7
  1755  006C  286E               	goto	u581
  1756  006D  286F               	goto	u580
  1757  006E                     u581:
  1758  006E  285E               	goto	l1096
  1759  006F                     u580:
  1760  006F                     l1100:
  1761  006F  3001               	movlw	1
  1762  0070  00F4               	movwf	??___aldiv
  1763  0071                     u595:
  1764  0071  1003               	clrc
  1765  0072  0DAA               	rlf	___aldiv@quotient,f
  1766  0073  0DAB               	rlf	___aldiv@quotient+1,f
  1767  0074  0DAC               	rlf	___aldiv@quotient+2,f
  1768  0075  0DAD               	rlf	___aldiv@quotient+3,f
  1769  0076  0BF4               	decfsz	??___aldiv,f
  1770  0077  2871               	goto	u595
  1771  0078                     l1102:
  1772  0078  0823               	movf	___aldiv@divisor+3,w
  1773  0079  0227               	subwf	___aldiv@dividend+3,w
  1774  007A  1D03               	skipz
  1775  007B  2886               	goto	u605
  1776  007C  0822               	movf	___aldiv@divisor+2,w
  1777  007D  0226               	subwf	___aldiv@dividend+2,w
  1778  007E  1D03               	skipz
  1779  007F  2886               	goto	u605
  1780  0080  0821               	movf	___aldiv@divisor+1,w
  1781  0081  0225               	subwf	___aldiv@dividend+1,w
  1782  0082  1D03               	skipz
  1783  0083  2886               	goto	u605
  1784  0084  0820               	movf	___aldiv@divisor,w
  1785  0085  0224               	subwf	___aldiv@dividend,w
  1786  0086                     u605:
  1787  0086  1C03               	skipc
  1788  0087  2889               	goto	u601
  1789  0088  288A               	goto	u600
  1790  0089                     u601:
  1791  0089  2899               	goto	l1108
  1792  008A                     u600:
  1793  008A                     l1104:
  1794  008A  0820               	movf	___aldiv@divisor,w
  1795  008B  02A4               	subwf	___aldiv@dividend,f
  1796  008C  0821               	movf	___aldiv@divisor+1,w
  1797  008D  1C03               	skipc
  1798  008E  0F21               	incfsz	___aldiv@divisor+1,w
  1799  008F  02A5               	subwf	___aldiv@dividend+1,f
  1800  0090  0822               	movf	___aldiv@divisor+2,w
  1801  0091  1C03               	skipc
  1802  0092  0F22               	incfsz	___aldiv@divisor+2,w
  1803  0093  02A6               	subwf	___aldiv@dividend+2,f
  1804  0094  0823               	movf	___aldiv@divisor+3,w
  1805  0095  1C03               	skipc
  1806  0096  0F23               	incfsz	___aldiv@divisor+3,w
  1807  0097  02A7               	subwf	___aldiv@dividend+3,f
  1808  0098                     l1106:
  1809  0098  142A               	bsf	___aldiv@quotient,0
  1810  0099                     l1108:
  1811  0099  3001               	movlw	1
  1812  009A                     u615:
  1813  009A  1003               	clrc
  1814  009B  0CA3               	rrf	___aldiv@divisor+3,f
  1815  009C  0CA2               	rrf	___aldiv@divisor+2,f
  1816  009D  0CA1               	rrf	___aldiv@divisor+1,f
  1817  009E  0CA0               	rrf	___aldiv@divisor,f
  1818  009F  3EFF               	addlw	-1
  1819  00A0  1D03               	skipz
  1820  00A1  289A               	goto	u615
  1821  00A2                     l1110:
  1822  00A2  3001               	movlw	1
  1823  00A3  02A8               	subwf	___aldiv@counter,f
  1824  00A4  1D03               	btfss	3,2
  1825  00A5  28A7               	goto	u621
  1826  00A6  28A8               	goto	u620
  1827  00A7                     u621:
  1828  00A7  286F               	goto	l1100
  1829  00A8                     u620:
  1830  00A8                     l1112:
  1831  00A8  0829               	movf	___aldiv@sign,w
  1832  00A9  1903               	btfsc	3,2
  1833  00AA  28AC               	goto	u631
  1834  00AB  28AD               	goto	u630
  1835  00AC                     u631:
  1836  00AC  28B8               	goto	l1116
  1837  00AD                     u630:
  1838  00AD                     l1114:
  1839  00AD  09AA               	comf	___aldiv@quotient,f
  1840  00AE  09AB               	comf	___aldiv@quotient+1,f
  1841  00AF  09AC               	comf	___aldiv@quotient+2,f
  1842  00B0  09AD               	comf	___aldiv@quotient+3,f
  1843  00B1  0AAA               	incf	___aldiv@quotient,f
  1844  00B2  1903               	skipnz
  1845  00B3  0AAB               	incf	___aldiv@quotient+1,f
  1846  00B4  1903               	skipnz
  1847  00B5  0AAC               	incf	___aldiv@quotient+2,f
  1848  00B6  1903               	skipnz
  1849  00B7  0AAD               	incf	___aldiv@quotient+3,f
  1850  00B8                     l1116:
  1851  00B8  082D               	movf	___aldiv@quotient+3,w
  1852  00B9  00A3               	movwf	?___aldiv+3
  1853  00BA  082C               	movf	___aldiv@quotient+2,w
  1854  00BB  00A2               	movwf	?___aldiv+2
  1855  00BC  082B               	movf	___aldiv@quotient+1,w
  1856  00BD  00A1               	movwf	?___aldiv+1
  1857  00BE  082A               	movf	___aldiv@quotient,w
  1858  00BF  00A0               	movwf	?___aldiv
  1859  00C0                     l317:
  1860  00C0  0008               	return
  1861  00C1                     __end_of___aldiv:
  1862                           
  1863                           	psect	text10
  1864  0231                     __ptext10:	
  1865 ;; *************** function _txint *****************
  1866 ;; Defined at:
  1867 ;;		line 21 in file "mini2.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0
  1883 ;;      Temps:          4       0       0       0       0
  1884 ;;      Totals:         4       0       0       0       0
  1885 ;;Total ram usage:        4 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		Interrupt level 1
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _txint
  1896  0231                     _txint:
  1897  0231                     i1l1004:
  1898                           
  1899                           ;mini2.c: 30:     if (PIR1bits.TXIF == 1) {
  1900  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0233  1E0C               	btfss	12,4	;volatile
  1903  0234  2A36               	goto	u43_21
  1904  0235  2A37               	goto	u43_20
  1905  0236                     u43_21:
  1906  0236  2A4A               	goto	i1l1014
  1907  0237                     u43_20:
  1908  0237                     i1l1006:
  1909                           
  1910                           ;mini2.c: 31:         TXREG = escribir;
  1911  0237  0879               	movf	_escribir,w
  1912  0238  0099               	movwf	25	;volatile
  1913  0239                     i1l1008:
  1914                           
  1915                           ;mini2.c: 32:         if (num == 5) {
  1916  0239  3005               	movlw	5
  1917  023A  0648               	xorwf	_num,w
  1918  023B  0449               	iorwf	_num+1,w
  1919  023C  1D03               	btfss	3,2
  1920  023D  2A3F               	goto	u44_21
  1921  023E  2A40               	goto	u44_20
  1922  023F                     u44_21:
  1923  023F  2A43               	goto	i1l1012
  1924  0240                     u44_20:
  1925  0240                     i1l1010:
  1926                           
  1927                           ;mini2.c: 33:             num = 0;
  1928  0240  01C8               	clrf	_num
  1929  0241  01C9               	clrf	_num+1
  1930                           
  1931                           ;mini2.c: 34:         } else {
  1932  0242  2A4C               	goto	i1l1016
  1933  0243                     i1l1012:
  1934                           
  1935                           ;mini2.c: 35:             num++;
  1936  0243  3001               	movlw	1
  1937  0244  07C8               	addwf	_num,f
  1938  0245  1803               	skipnc
  1939  0246  0AC9               	incf	_num+1,f
  1940  0247  3000               	movlw	0
  1941  0248  07C9               	addwf	_num+1,f
  1942  0249  2A4C               	goto	i1l1016
  1943  024A                     i1l1014:
  1944                           
  1945                           ;mini2.c: 38:         TXREG = 66;
  1946  024A  3042               	movlw	66
  1947  024B  0099               	movwf	25	;volatile
  1948  024C                     i1l1016:
  1949                           
  1950                           ;mini2.c: 42:     if (PIR1bits.RCIF == 1) {
  1951  024C  1E8C               	btfss	12,5	;volatile
  1952  024D  2A4F               	goto	u45_21
  1953  024E  2A50               	goto	u45_20
  1954  024F                     u45_21:
  1955  024F  2A57               	goto	i1l80
  1956  0250                     u45_20:
  1957  0250                     i1l1018:
  1958                           
  1959                           ;mini2.c: 43:         leer = RCREG;
  1960  0250  081A               	movf	26,w	;volatile
  1961  0251  00F0               	movwf	??_txint
  1962  0252  01F1               	clrf	??_txint+1
  1963  0253  0870               	movf	??_txint,w
  1964  0254  00CC               	movwf	_leer
  1965  0255  0871               	movf	??_txint+1,w
  1966  0256  00CD               	movwf	_leer+1
  1967  0257                     i1l80:
  1968  0257  0873               	movf	??_txint+3,w
  1969  0258  008A               	movwf	10
  1970  0259  0E72               	swapf	??_txint+2,w
  1971  025A  0083               	movwf	3
  1972  025B  0EFE               	swapf	btemp,f
  1973  025C  0E7E               	swapf	btemp,w
  1974  025D  0009               	retfie
  1975  025E                     __end_of_txint:
  1976  007E                     btemp	set	126	;btemp
  1977  007E                     wtemp0	set	126
  1978                           
  1979                           	psect	intentry
  1980  0004                     __pintentry:	
  1981                           ;incstack = 0
  1982                           ; Regs used in _txint: [wreg+status,2+status,0]
  1983                           
  1984  0004                     interrupt_function:
  1985  007E                     saved_w	set	btemp
  1986  0004  00FE               	movwf	btemp
  1987  0005  0E03               	swapf	3,w
  1988  0006  00F2               	movwf	??_txint+2
  1989  0007  080A               	movf	10,w
  1990  0008  00F3               	movwf	??_txint+3
  1991  0009  120A  118A  2A31   	ljmp	_txint
  1992                           
  1993                           	psect	config
  1994                           
  1995                           ;Config register CONFIG1 @ 0x2007
  1996                           ;	Oscillator Selection bits
  1997                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1998                           ;	Watchdog Timer Enable bit
  1999                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2000                           ;	Power-up Timer Enable bit
  2001                           ;	PWRTE = ON, PWRT enabled
  2002                           ;	RE3/MCLR pin function select bit
  2003                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2004                           ;	Code Protection bit
  2005                           ;	CP = OFF, Program memory code protection is disabled
  2006                           ;	Data Code Protection bit
  2007                           ;	CPD = OFF, Data memory code protection is disabled
  2008                           ;	Brown Out Reset Selection bits
  2009                           ;	BOREN = OFF, BOR disabled
  2010                           ;	Internal External Switchover bit
  2011                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2012                           ;	Fail-Safe Clock Monitor Enabled bit
  2013                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2014                           ;	Low Voltage Programming Enable bit
  2015                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2016                           ;	In-Circuit Debugger Mode bit
  2017                           ;	DEBUG = 0x1, unprogrammed default
  2018  2007                     	org	8199
  2019  2007  20C4               	dw	8388
  2020                           
  2021                           ;Config register CONFIG2 @ 0x2008
  2022                           ;	Brown-out Reset Selection bit
  2023                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2024                           ;	Flash Program Memory Self Write Enable bits
  2025                           ;	WRT = OFF, Write protection off
  2026  2008                     	org	8200
  2027  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     34      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _adxl345_read->_I2C_Master_Read
    _adxl345_read->_I2C_Master_Write
    _COM_EUSART->___aldiv

Critical Paths under _txint in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_COM_EUSART
    _adxl345_read->_I2C_Master_Read
    _COM_EUSART->___aldiv

Critical Paths under _txint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _txint in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _txint in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _txint in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2142
                                              6 COMMON     1     1      0
                         _COM_EUSART
                       _adxl345_read
                            _con_mp2
 ---------------------------------------------------------------------------------
 (1) _con_mp2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adxl345_read                                         4     2      2    1331
                                              4 BANK0      4     2      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     571
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     155
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _COM_EUSART                                          20    16      4     811
                                             14 BANK0     20    16      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _txint                                                4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COM_EUSART
     ___aldiv
   _adxl345_read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _con_mp2

 _txint (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 14 21:51:22 2021

                       l11 01C0                         l42 0282                        l122 0283  
                      l131 02A2                        l125 028F                        l134 0299  
                      l128 02AB                        l137 0230                        l153 0201  
                      l307 0038                        l317 00C0                        l990 027E  
                      l992 027F                        l984 025E                        l994 0280  
                      l986 027A                        l988 027D                        u500 0289  
                      u501 0288                        u510 028F                        u511 028E  
                      u600 008A                        u520 0226                        _PEN 048A  
                      u601 0089                        u521 0222                        u620 00A8  
                      u540 002B                        u700 00F5                        u621 00A7  
                      u605 0086                        u541 002A                        u701 00F4  
                      u630 00AD                        u550 003C                        u534 0229  
                      u631 00AC                        u615 009A                        u551 003B  
                      u560 005B                        u640 016D                        u561 005A  
                      u650 0186                        u580 006F                        _SEN 0488  
                      u581 006E                        u661 0198                        u645 0168  
                      u662 0199                        u670 00DD                        u575 0060  
                      u663 019E                        u655 0181                        u671 00DC  
                      u664 019F                        u680 00E5                        u665 01A4  
                      u681 00E4                        u666 01A5                        u690 00ED  
                      u595 0071                        u691 00EC                        _num 0048  
                     l1100 006F                       l1110 00A2                       l1102 0078  
                     l1104 008A                       l1112 00A8                       l1120 0154  
                     l1114 00AD                       l1106 0098                       l1122 0158  
                     l1050 0289                       l1130 01FB                       l1116 00B8  
                     l1108 0099                       l1124 015F                       l1052 02A3  
                     l1060 0290                       l1140 00D5                       l1126 01BC  
                     l1070 0218                       l1054 02A8                       l1062 0295  
                     l1150 00ED                       l1142 00DD                       l1080 0024  
                     l1048 0283                       l1072 021D                       l1064 0202  
                     l1056 029A                       l1128 01C1                       l1152 00EE  
                     l1144 00DE                       l1136 00C1                       l1090 004B  
                     l1082 0027                       l1074 0229                       l1066 0207  
                     l1058 029F                       l1154 00F5                       l1146 00E5  
                     l1138 00C6                       l1092 0053                       l1084 002B  
                     l1076 022A                       l1068 020F                       l1156 00F6  
                     l1148 00E6                       l1094 005B                       l1086 003C  
                     l1096 005E                       l1088 0047                       l1098 006B  
                     _IOCB 0096                       _RCEN 048B                       i1l80 0257  
                     _led1 0078                       _led2 0077                       _cont 004A  
                     _main 00C1                       _leer 004C                       btemp 007E  
                     start 000C      __size_of_adxl345_read 0041           ?_I2C_Master_Read 0074  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070            __end_of___aldiv 00C1  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
                    _ANSEL 0188        __size_of_COM_EUSART 006D                      _RCREG 001A  
                    _RCSTA 0018                      _SPBRG 0099                      u43_20 0237  
                    u43_21 0236                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009                      u44_20 0240  
                    u44_21 023F                      u45_20 0250                      u45_21 024F  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019                      _TXSTA 0098  
          adxl345_read@add 0024            __end_of_con_mp2 0283                      _giros 0042  
                    _txint 0231                      pclath 000A                      status 0003  
                    wtemp0 007E               _adxl345_read 01C1            __initialization 000F  
             __end_of_main 0154                     ??_main 0076          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0074         ??_I2C_Master_Start 0074         ??_I2C_Master_Write 0076  
                   _ANSELH 0189                     ?_txint 0070                     i1l1010 0240  
                   i1l1012 0243                     i1l1004 0231                     i1l1006 0237  
                   i1l1014 024A                     i1l1016 024C                     i1l1008 0239  
                   i1l1018 0250                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___aldiv 0074         COM_EUSART@baudrate 002E                  ??_con_mp2 0074  
                   saved_w 007E    __end_of__initialization 0020               ??_COM_EUSART 0032  
           __pcstackCOMMON 0070              __end_of_txint 025E         __end_of_COM_EUSART 01C1  
                  ??_txint 0070                 __pbssBANK0 0042                 __pmaintext 00C1  
               __pintentry 0004                    _SSPCON2 0091                    _SSPSTAT 0094  
                  ___aldiv 0024                    __ptext1 025E                    __ptext2 01C1  
                  __ptext3 0290                    __ptext4 029A                    __ptext5 02A3  
                  __ptext6 0202                    __ptext7 0283                    __ptext8 0154  
                  __ptext9 0024                    _con_mp2 025E           ___aldiv@dividend 0024  
 __size_of_I2C_Master_Read 002F   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
     end_of_initialization 0020  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
         ___aldiv@quotient 002A           I2C_Master_Read@a 0074                  _PORTEbits 0009  
                _TRISCbits 0087                _BAUDCTLbits 0187        start_initialization 000F  
        ??_I2C_Master_Read 0020          ??_I2C_Master_Wait 0074          ??_I2C_Master_Stop 0074  
              __pbssCOMMON 0077                  ___latbits 0002              __pcstackBANK0 0020  
            ?_adxl345_read 0024           _I2C_Master_Start 02A3           _I2C_Master_Write 0290  
                 ?___aldiv 0020                   ?_con_mp2 0070             __size_of_txint 002D  
          ___aldiv@divisor 0020          interrupt_function 0004            ___aldiv@counter 0028  
           ??_adxl345_read 0076                   _PIE1bits 008C                   _PIR1bits 000C  
      I2C_Master_Read@temp 0022         adxl345_read@retval 0026           __size_of___aldiv 009D  
         __size_of_con_mp2 0025            _I2C_Master_Read 0202            _I2C_Master_Wait 0283  
          _I2C_Master_Stop 029A                   __ptext10 0231                   _escribir 0079  
               _COM_EUSART 0154              __size_of_main 0093       __end_of_adxl345_read 0202  
 __end_of_I2C_Master_Start 02AC   __end_of_I2C_Master_Write 029A                 _INTCONbits 000B  
                 intlevel1 0000    __end_of_I2C_Master_Read 0231    __end_of_I2C_Master_Wait 0290  
  __end_of_I2C_Master_Stop 02A3          I2C_Master_Write@d 0074               ___aldiv@sign 0029  
              COM_EUSART@p 003E                ?_COM_EUSART 002E  
