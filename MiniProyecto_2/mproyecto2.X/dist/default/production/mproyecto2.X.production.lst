

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Mar 09 15:13:46 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  0105                     	;# 
   346  0107                     	;# 
   347  0108                     	;# 
   348  0109                     	;# 
   349  010C                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0187                     	;# 
   356  0188                     	;# 
   357  0189                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0009                     _PORTEbits	set	9
   361  0009                     _PORTE	set	9
   362  0018                     _RCSTA	set	24
   363  0089                     _TRISE	set	137
   364  0099                     _SPBRG	set	153
   365  0098                     _TXSTA	set	152
   366  0189                     _ANSELH	set	393
   367  0188                     _ANSEL	set	392
   368  0187                     _BAUDCTLbits	set	391
   369                           
   370                           	psect	cinit
   371  07FC                     start_initialization:	
   372                           ; #config settings
   373                           
   374  07FC                     __initialization:
   375  07FC                     end_of_initialization:	
   376                           ;End of C runtime variable initialization code
   377                           
   378  07FC                     __end_of__initialization:
   379  07FC  0183               	clrf	3
   380  07FD  120A  118A  2EDA   	ljmp	_main	;jump to C main() function
   381                           
   382                           	psect	cstackCOMMON
   383  0070                     __pcstackCOMMON:
   384  0070                     ?_con_mp2:
   385  0070                     ??_con_mp2:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ?_main:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?___aldiv:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ___aldiv@divisor:	
   395                           ; 4 bytes @ 0x0
   396                           
   397                           
   398                           ; 4 bytes @ 0x0
   399  0070                     	ds	4
   400  0074                     ___aldiv@dividend:
   401                           
   402                           ; 4 bytes @ 0x4
   403  0074                     	ds	4
   404  0078                     ??___aldiv:
   405                           
   406                           ; 1 bytes @ 0x8
   407  0078                     	ds	1
   408  0079                     COM_EUSART@p:
   409                           
   410                           ; 4 bytes @ 0x9
   411  0079                     	ds	4
   412  007D                     ??_main:
   413                           
   414                           	psect	cstackBANK0
   415  0020                     __pcstackBANK0:	
   416                           ; 1 bytes @ 0xD
   417                           
   418  0020                     ___aldiv@counter:
   419                           
   420                           ; 1 bytes @ 0x0
   421  0020                     	ds	1
   422  0021                     ___aldiv@sign:
   423                           
   424                           ; 1 bytes @ 0x1
   425  0021                     	ds	1
   426  0022                     ___aldiv@quotient:
   427                           
   428                           ; 4 bytes @ 0x2
   429  0022                     	ds	4
   430  0026                     ?_COM_EUSART:
   431  0026                     COM_EUSART@baudrate:	
   432                           ; 1 bytes @ 0x6
   433                           
   434                           
   435                           ; 4 bytes @ 0x6
   436  0026                     	ds	4
   437  002A                     ??_COM_EUSART:
   438                           
   439                           ; 1 bytes @ 0xA
   440  002A                     	ds	12
   441                           
   442                           	psect	maintext
   443  06DA                     __pmaintext:	
   444 ;;
   445 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   446 ;;
   447 ;; *************** function _main *****************
   448 ;; Defined at:
   449 ;;		line 12 in file "mini2.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : B00/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels required when called:    2
   469 ;; This function calls:
   470 ;;		_COM_EUSART
   471 ;;		_con_mp2
   472 ;; This function is called by:
   473 ;;		Startup code after reset
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           
   478                           ;psect for function _main
   479  06DA                     _main:
   480  06DA                     l735:	
   481                           ;incstack = 0
   482                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   483                           
   484                           
   485                           ;mini2.c: 13:     con_mp2();
   486  06DA  120A  118A  26CF  120A  118A  	fcall	_con_mp2
   487  06DF                     l737:
   488                           
   489                           ;mini2.c: 14:     COM_EUSART(9600);
   490  06DF  3000               	movlw	0
   491  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   492  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   493  06E2  00A9               	movwf	COM_EUSART@baudrate+3
   494  06E3  3000               	movlw	0
   495  06E4  00A8               	movwf	COM_EUSART@baudrate+2
   496  06E5  3025               	movlw	37
   497  06E6  00A7               	movwf	COM_EUSART@baudrate+1
   498  06E7  3080               	movlw	128
   499  06E8  00A6               	movwf	COM_EUSART@baudrate
   500  06E9  120A  118A  26F4  120A  118A  	fcall	_COM_EUSART
   501  06EE                     l739:
   502                           
   503                           ;mini2.c: 15:     PORTEbits.RE1=1;
   504  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   505  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   506  06F0  1489               	bsf	9,1	;volatile
   507  06F1                     l33:
   508  06F1  120A  118A  2800   	ljmp	start
   509  06F4                     __end_of_main:
   510                           
   511                           	psect	text1
   512  06CF                     __ptext1:	
   513 ;; *************** function _con_mp2 *****************
   514 ;; Defined at:
   515 ;;		line 28 in file "CONM2.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;		None
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		status,2
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0
   532 ;;      Totals:         0       0       0       0       0
   533 ;;Total ram usage:        0 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _con_mp2
   544  06CF                     _con_mp2:
   545  06CF                     l675:	
   546                           ;incstack = 0
   547                           ; Regs used in _con_mp2: [status,2]
   548                           
   549  06CF  1683               	bsf	3,5	;RP0=1, select bank3
   550  06D0  1703               	bsf	3,6	;RP1=1, select bank3
   551  06D1  0188               	clrf	8	;volatile
   552  06D2  0189               	clrf	9	;volatile
   553  06D3  1683               	bsf	3,5	;RP0=1, select bank1
   554  06D4  1303               	bcf	3,6	;RP1=0, select bank1
   555  06D5  0189               	clrf	9	;volatile
   556  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   557  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   558  06D8  0189               	clrf	9	;volatile
   559  06D9                     l22:
   560  06D9  0008               	return
   561  06DA                     __end_of_con_mp2:
   562                           
   563                           	psect	text2
   564  06F4                     __ptext2:	
   565 ;; *************** function _COM_EUSART *****************
   566 ;; Defined at:
   567 ;;		line 4 in file "UART.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  baudrate        4    6[BANK0 ] const long 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  p               4    9[COMMON] long 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   581 ;;      Params:         0       4       0       0       0
   582 ;;      Locals:         4       0       0       0       0
   583 ;;      Temps:          0      12       0       0       0
   584 ;;      Totals:         4      16       0       0       0
   585 ;;Total ram usage:       20 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    1
   588 ;; This function calls:
   589 ;;		___aldiv
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _COM_EUSART
   597  06F4                     _COM_EUSART:
   598  06F4                     l727:	
   599                           ;incstack = 0
   600                           ; Regs used in _COM_EUSART: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   601                           
   602                           
   603                           ;UART.c: 5:     long int p;;UART.c: 6:     TXSTA = 0b00100000;
   604  06F4  3020               	movlw	32
   605  06F5  1683               	bsf	3,5	;RP0=1, select bank1
   606  06F6  1303               	bcf	3,6	;RP1=0, select bank1
   607  06F7  0098               	movwf	24	;volatile
   608  06F8                     l729:
   609                           
   610                           ;UART.c: 7:     BAUDCTLbits.BRG16 = 0;
   611  06F8  1683               	bsf	3,5	;RP0=1, select bank3
   612  06F9  1703               	bsf	3,6	;RP1=1, select bank3
   613  06FA  1187               	bcf	7,3	;volatile
   614                           
   615                           ;UART.c: 8:     RCSTA= 0b10010000;
   616  06FB  3090               	movlw	144
   617  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   618  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   619  06FE  0098               	movwf	24	;volatile
   620  06FF                     l731:
   621                           
   622                           ;UART.c: 9:     p = (8000000 - baudrate*64)/(baudrate*64);
   623  06FF  0826               	movf	COM_EUSART@baudrate,w
   624  0700  00AA               	movwf	??_COM_EUSART
   625  0701  0827               	movf	COM_EUSART@baudrate+1,w
   626  0702  00AB               	movwf	??_COM_EUSART+1
   627  0703  0828               	movf	COM_EUSART@baudrate+2,w
   628  0704  00AC               	movwf	??_COM_EUSART+2
   629  0705  0829               	movf	COM_EUSART@baudrate+3,w
   630  0706  00AD               	movwf	??_COM_EUSART+3
   631  0707  3006               	movlw	6
   632  0708                     u245:
   633  0708  1003               	clrc
   634  0709  0DAA               	rlf	??_COM_EUSART,f
   635  070A  0DAB               	rlf	??_COM_EUSART+1,f
   636  070B  0DAC               	rlf	??_COM_EUSART+2,f
   637  070C  0DAD               	rlf	??_COM_EUSART+3,f
   638  070D                     u240:
   639  070D  3EFF               	addlw	-1
   640  070E  1D03               	skipz
   641  070F  2F08               	goto	u245
   642  0710  082D               	movf	??_COM_EUSART+3,w
   643  0711  00F3               	movwf	___aldiv@divisor+3
   644  0712  082C               	movf	??_COM_EUSART+2,w
   645  0713  00F2               	movwf	___aldiv@divisor+2
   646  0714  082B               	movf	??_COM_EUSART+1,w
   647  0715  00F1               	movwf	___aldiv@divisor+1
   648  0716  082A               	movf	??_COM_EUSART,w
   649  0717  00F0               	movwf	___aldiv@divisor
   650  0718  0826               	movf	COM_EUSART@baudrate,w
   651  0719  00AE               	movwf	??_COM_EUSART+4
   652  071A  0827               	movf	COM_EUSART@baudrate+1,w
   653  071B  00AF               	movwf	??_COM_EUSART+5
   654  071C  0828               	movf	COM_EUSART@baudrate+2,w
   655  071D  00B0               	movwf	??_COM_EUSART+6
   656  071E  0829               	movf	COM_EUSART@baudrate+3,w
   657  071F  00B1               	movwf	??_COM_EUSART+7
   658  0720  3006               	movlw	6
   659  0721                     u255:
   660  0721  1003               	clrc
   661  0722  0DAE               	rlf	??_COM_EUSART+4,f
   662  0723  0DAF               	rlf	??_COM_EUSART+5,f
   663  0724  0DB0               	rlf	??_COM_EUSART+6,f
   664  0725  0DB1               	rlf	??_COM_EUSART+7,f
   665  0726                     u250:
   666  0726  3EFF               	addlw	-1
   667  0727  1D03               	skipz
   668  0728  2F21               	goto	u255
   669  0729  3000               	movlw	0
   670  072A  00B2               	movwf	??_COM_EUSART+8
   671  072B  3012               	movlw	18
   672  072C  00B3               	movwf	??_COM_EUSART+9
   673  072D  307A               	movlw	122
   674  072E  00B4               	movwf	??_COM_EUSART+10
   675  072F  3000               	movlw	0
   676  0730  00B5               	movwf	??_COM_EUSART+11
   677  0731  082E               	movf	??_COM_EUSART+4,w
   678  0732  02B2               	subwf	??_COM_EUSART+8,f
   679  0733  082F               	movf	??_COM_EUSART+5,w
   680  0734  1C03               	skipc
   681  0735  0F2F               	incfsz	??_COM_EUSART+5,w
   682  0736  2F38               	goto	u261
   683  0737  2F39               	goto	u262
   684  0738                     u261:
   685  0738  02B3               	subwf	??_COM_EUSART+9,f
   686  0739                     u262:
   687  0739  0830               	movf	??_COM_EUSART+6,w
   688  073A  1C03               	skipc
   689  073B  0F30               	incfsz	??_COM_EUSART+6,w
   690  073C  2F3E               	goto	u263
   691  073D  2F3F               	goto	u264
   692  073E                     u263:
   693  073E  02B4               	subwf	??_COM_EUSART+10,f
   694  073F                     u264:
   695  073F  0831               	movf	??_COM_EUSART+7,w
   696  0740  1C03               	skipc
   697  0741  0F31               	incfsz	??_COM_EUSART+7,w
   698  0742  2F44               	goto	u265
   699  0743  2F45               	goto	u266
   700  0744                     u265:
   701  0744  02B5               	subwf	??_COM_EUSART+11,f
   702  0745                     u266:
   703  0745  0835               	movf	??_COM_EUSART+11,w
   704  0746  00F7               	movwf	___aldiv@dividend+3
   705  0747  0834               	movf	??_COM_EUSART+10,w
   706  0748  00F6               	movwf	___aldiv@dividend+2
   707  0749  0833               	movf	??_COM_EUSART+9,w
   708  074A  00F5               	movwf	___aldiv@dividend+1
   709  074B  0832               	movf	??_COM_EUSART+8,w
   710  074C  00F4               	movwf	___aldiv@dividend
   711  074D  120A  118A  275F  120A  118A  	fcall	___aldiv
   712  0752  0873               	movf	?___aldiv+3,w
   713  0753  00FC               	movwf	COM_EUSART@p+3
   714  0754  0872               	movf	?___aldiv+2,w
   715  0755  00FB               	movwf	COM_EUSART@p+2
   716  0756  0871               	movf	?___aldiv+1,w
   717  0757  00FA               	movwf	COM_EUSART@p+1
   718  0758  0870               	movf	?___aldiv,w
   719  0759  00F9               	movwf	COM_EUSART@p
   720  075A                     l733:
   721                           
   722                           ;UART.c: 10:     SPBRG = p;
   723  075A  0879               	movf	COM_EUSART@p,w
   724  075B  1683               	bsf	3,5	;RP0=1, select bank1
   725  075C  1303               	bcf	3,6	;RP1=0, select bank1
   726  075D  0099               	movwf	25	;volatile
   727  075E                     l11:
   728  075E  0008               	return
   729  075F                     __end_of_COM_EUSART:
   730                           
   731                           	psect	text3
   732  075F                     __ptext3:	
   733 ;; *************** function ___aldiv *****************
   734 ;; Defined at:
   735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  divisor         4    0[COMMON] long 
   738 ;;  dividend        4    4[COMMON] long 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  quotient        4    2[BANK0 ] long 
   741 ;;  sign            1    1[BANK0 ] unsigned char 
   742 ;;  counter         1    0[BANK0 ] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  4    0[COMMON] long 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, btemp+1
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         8       0       0       0       0
   753 ;;      Locals:         0       6       0       0       0
   754 ;;      Temps:          1       0       0       0       0
   755 ;;      Totals:         9       6       0       0       0
   756 ;;Total ram usage:       15 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_COM_EUSART
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function ___aldiv
   767  075F                     ___aldiv:
   768  075F                     l685:	
   769                           ;incstack = 0
   770                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
   771                           
   772  075F  1283               	bcf	3,5	;RP0=0, select bank0
   773  0760  1303               	bcf	3,6	;RP1=0, select bank0
   774  0761  01A1               	clrf	___aldiv@sign
   775  0762                     l687:
   776  0762  1FF3               	btfss	___aldiv@divisor+3,7
   777  0763  2F65               	goto	u141
   778  0764  2F66               	goto	u140
   779  0765                     u141:
   780  0765  2F73               	goto	l184
   781  0766                     u140:
   782  0766                     l689:
   783  0766  09F0               	comf	___aldiv@divisor,f
   784  0767  09F1               	comf	___aldiv@divisor+1,f
   785  0768  09F2               	comf	___aldiv@divisor+2,f
   786  0769  09F3               	comf	___aldiv@divisor+3,f
   787  076A  0AF0               	incf	___aldiv@divisor,f
   788  076B  1903               	skipnz
   789  076C  0AF1               	incf	___aldiv@divisor+1,f
   790  076D  1903               	skipnz
   791  076E  0AF2               	incf	___aldiv@divisor+2,f
   792  076F  1903               	skipnz
   793  0770  0AF3               	incf	___aldiv@divisor+3,f
   794  0771  01A1               	clrf	___aldiv@sign
   795  0772  0AA1               	incf	___aldiv@sign,f
   796  0773                     l184:
   797  0773  1FF7               	btfss	___aldiv@dividend+3,7
   798  0774  2F76               	goto	u151
   799  0775  2F77               	goto	u150
   800  0776                     u151:
   801  0776  2F86               	goto	l695
   802  0777                     u150:
   803  0777                     l691:
   804  0777  09F4               	comf	___aldiv@dividend,f
   805  0778  09F5               	comf	___aldiv@dividend+1,f
   806  0779  09F6               	comf	___aldiv@dividend+2,f
   807  077A  09F7               	comf	___aldiv@dividend+3,f
   808  077B  0AF4               	incf	___aldiv@dividend,f
   809  077C  1903               	skipnz
   810  077D  0AF5               	incf	___aldiv@dividend+1,f
   811  077E  1903               	skipnz
   812  077F  0AF6               	incf	___aldiv@dividend+2,f
   813  0780  1903               	skipnz
   814  0781  0AF7               	incf	___aldiv@dividend+3,f
   815  0782                     l693:
   816  0782  3001               	movlw	1
   817  0783  00FF               	movwf	btemp+1
   818  0784  087F               	movf	btemp+1,w
   819  0785  06A1               	xorwf	___aldiv@sign,f
   820  0786                     l695:
   821  0786  3000               	movlw	0
   822  0787  00A5               	movwf	___aldiv@quotient+3
   823  0788  3000               	movlw	0
   824  0789  00A4               	movwf	___aldiv@quotient+2
   825  078A  3000               	movlw	0
   826  078B  00A3               	movwf	___aldiv@quotient+1
   827  078C  3000               	movlw	0
   828  078D  00A2               	movwf	___aldiv@quotient
   829  078E                     l697:
   830  078E  0873               	movf	___aldiv@divisor+3,w
   831  078F  0472               	iorwf	___aldiv@divisor+2,w
   832  0790  0471               	iorwf	___aldiv@divisor+1,w
   833  0791  0470               	iorwf	___aldiv@divisor,w
   834  0792  1903               	skipnz
   835  0793  2F95               	goto	u161
   836  0794  2F96               	goto	u160
   837  0795                     u161:
   838  0795  2FE3               	goto	l719
   839  0796                     u160:
   840  0796                     l699:
   841  0796  01A0               	clrf	___aldiv@counter
   842  0797  0AA0               	incf	___aldiv@counter,f
   843  0798  2FA6               	goto	l705
   844  0799                     l701:
   845  0799  3001               	movlw	1
   846  079A  00F8               	movwf	??___aldiv
   847  079B                     u175:
   848  079B  1003               	clrc
   849  079C  0DF0               	rlf	___aldiv@divisor,f
   850  079D  0DF1               	rlf	___aldiv@divisor+1,f
   851  079E  0DF2               	rlf	___aldiv@divisor+2,f
   852  079F  0DF3               	rlf	___aldiv@divisor+3,f
   853  07A0  0BF8               	decfsz	??___aldiv,f
   854  07A1  2F9B               	goto	u175
   855  07A2                     l703:
   856  07A2  3001               	movlw	1
   857  07A3  00FF               	movwf	btemp+1
   858  07A4  087F               	movf	btemp+1,w
   859  07A5  07A0               	addwf	___aldiv@counter,f
   860  07A6                     l705:
   861  07A6  1FF3               	btfss	___aldiv@divisor+3,7
   862  07A7  2FA9               	goto	u181
   863  07A8  2FAA               	goto	u180
   864  07A9                     u181:
   865  07A9  2F99               	goto	l701
   866  07AA                     u180:
   867  07AA                     l707:
   868  07AA  3001               	movlw	1
   869  07AB  00F8               	movwf	??___aldiv
   870  07AC                     u195:
   871  07AC  1003               	clrc
   872  07AD  0DA2               	rlf	___aldiv@quotient,f
   873  07AE  0DA3               	rlf	___aldiv@quotient+1,f
   874  07AF  0DA4               	rlf	___aldiv@quotient+2,f
   875  07B0  0DA5               	rlf	___aldiv@quotient+3,f
   876  07B1  0BF8               	decfsz	??___aldiv,f
   877  07B2  2FAC               	goto	u195
   878  07B3                     l709:
   879  07B3  0873               	movf	___aldiv@divisor+3,w
   880  07B4  0277               	subwf	___aldiv@dividend+3,w
   881  07B5  1D03               	skipz
   882  07B6  2FC1               	goto	u205
   883  07B7  0872               	movf	___aldiv@divisor+2,w
   884  07B8  0276               	subwf	___aldiv@dividend+2,w
   885  07B9  1D03               	skipz
   886  07BA  2FC1               	goto	u205
   887  07BB  0871               	movf	___aldiv@divisor+1,w
   888  07BC  0275               	subwf	___aldiv@dividend+1,w
   889  07BD  1D03               	skipz
   890  07BE  2FC1               	goto	u205
   891  07BF  0870               	movf	___aldiv@divisor,w
   892  07C0  0274               	subwf	___aldiv@dividend,w
   893  07C1                     u205:
   894  07C1  1C03               	skipc
   895  07C2  2FC4               	goto	u201
   896  07C3  2FC5               	goto	u200
   897  07C4                     u201:
   898  07C4  2FD4               	goto	l715
   899  07C5                     u200:
   900  07C5                     l711:
   901  07C5  0870               	movf	___aldiv@divisor,w
   902  07C6  02F4               	subwf	___aldiv@dividend,f
   903  07C7  0871               	movf	___aldiv@divisor+1,w
   904  07C8  1C03               	skipc
   905  07C9  0F71               	incfsz	___aldiv@divisor+1,w
   906  07CA  02F5               	subwf	___aldiv@dividend+1,f
   907  07CB  0872               	movf	___aldiv@divisor+2,w
   908  07CC  1C03               	skipc
   909  07CD  0F72               	incfsz	___aldiv@divisor+2,w
   910  07CE  02F6               	subwf	___aldiv@dividend+2,f
   911  07CF  0873               	movf	___aldiv@divisor+3,w
   912  07D0  1C03               	skipc
   913  07D1  0F73               	incfsz	___aldiv@divisor+3,w
   914  07D2  02F7               	subwf	___aldiv@dividend+3,f
   915  07D3                     l713:
   916  07D3  1422               	bsf	___aldiv@quotient,0
   917  07D4                     l715:
   918  07D4  3001               	movlw	1
   919  07D5                     u215:
   920  07D5  1003               	clrc
   921  07D6  0CF3               	rrf	___aldiv@divisor+3,f
   922  07D7  0CF2               	rrf	___aldiv@divisor+2,f
   923  07D8  0CF1               	rrf	___aldiv@divisor+1,f
   924  07D9  0CF0               	rrf	___aldiv@divisor,f
   925  07DA  3EFF               	addlw	-1
   926  07DB  1D03               	skipz
   927  07DC  2FD5               	goto	u215
   928  07DD                     l717:
   929  07DD  3001               	movlw	1
   930  07DE  02A0               	subwf	___aldiv@counter,f
   931  07DF  1D03               	btfss	3,2
   932  07E0  2FE2               	goto	u221
   933  07E1  2FE3               	goto	u220
   934  07E2                     u221:
   935  07E2  2FAA               	goto	l707
   936  07E3                     u220:
   937  07E3                     l719:
   938  07E3  0821               	movf	___aldiv@sign,w
   939  07E4  1903               	btfsc	3,2
   940  07E5  2FE7               	goto	u231
   941  07E6  2FE8               	goto	u230
   942  07E7                     u231:
   943  07E7  2FF3               	goto	l723
   944  07E8                     u230:
   945  07E8                     l721:
   946  07E8  09A2               	comf	___aldiv@quotient,f
   947  07E9  09A3               	comf	___aldiv@quotient+1,f
   948  07EA  09A4               	comf	___aldiv@quotient+2,f
   949  07EB  09A5               	comf	___aldiv@quotient+3,f
   950  07EC  0AA2               	incf	___aldiv@quotient,f
   951  07ED  1903               	skipnz
   952  07EE  0AA3               	incf	___aldiv@quotient+1,f
   953  07EF  1903               	skipnz
   954  07F0  0AA4               	incf	___aldiv@quotient+2,f
   955  07F1  1903               	skipnz
   956  07F2  0AA5               	incf	___aldiv@quotient+3,f
   957  07F3                     l723:
   958  07F3  0825               	movf	___aldiv@quotient+3,w
   959  07F4  00F3               	movwf	?___aldiv+3
   960  07F5  0824               	movf	___aldiv@quotient+2,w
   961  07F6  00F2               	movwf	?___aldiv+2
   962  07F7  0823               	movf	___aldiv@quotient+1,w
   963  07F8  00F1               	movwf	?___aldiv+1
   964  07F9  0822               	movf	___aldiv@quotient,w
   965  07FA  00F0               	movwf	?___aldiv
   966  07FB                     l194:
   967  07FB  0008               	return
   968  07FC                     __end_of___aldiv:
   969  007E                     btemp	set	126	;btemp
   970  007E                     wtemp0	set	126
   971                           
   972                           	psect	config
   973                           
   974                           ;Config register CONFIG1 @ 0x2007
   975                           ;	Oscillator Selection bits
   976                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   977                           ;	Watchdog Timer Enable bit
   978                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   979                           ;	Power-up Timer Enable bit
   980                           ;	PWRTE = ON, PWRT enabled
   981                           ;	RE3/MCLR pin function select bit
   982                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   983                           ;	Code Protection bit
   984                           ;	CP = OFF, Program memory code protection is disabled
   985                           ;	Data Code Protection bit
   986                           ;	CPD = OFF, Data memory code protection is disabled
   987                           ;	Brown Out Reset Selection bits
   988                           ;	BOREN = OFF, BOR disabled
   989                           ;	Internal External Switchover bit
   990                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   991                           ;	Fail-Safe Clock Monitor Enabled bit
   992                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   993                           ;	Low Voltage Programming Enable bit
   994                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   995                           ;	In-Circuit Debugger Mode bit
   996                           ;	DEBUG = 0x1, unprogrammed default
   997  2007                     	org	8199
   998  2007  20C4               	dw	8388
   999                           
  1000                           ;Config register CONFIG2 @ 0x2008
  1001                           ;	Brown-out Reset Selection bit
  1002                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1003                           ;	Flash Program Memory Self Write Enable bits
  1004                           ;	WRT = OFF, Write protection off
  1005  2008                     	org	8200
  1006  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_COM_EUSART
    _COM_EUSART->___aldiv

Critical Paths under _main in BANK0

    _main->_COM_EUSART
    _COM_EUSART->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     595
                         _COM_EUSART
                            _con_mp2
 ---------------------------------------------------------------------------------
 (1) _con_mp2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _COM_EUSART                                          20    16      4     595
                                              9 COMMON     4     4      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COM_EUSART
     ___aldiv
   _con_mp2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Mar 09 15:13:46 2021

                     l11 075E                       l22 06D9                       l33 06F1  
                    l184 0773                      l194 07FB                      l701 0799  
                    l711 07C5                      l703 07A2                      l721 07E8  
                    l713 07D3                      l705 07A6                      l723 07F3  
                    l715 07D4                      l707 07AA                      l731 06FF  
                    l717 07DD                      l709 07B3                      l733 075A  
                    l719 07E3                      l727 06F4                      l735 06DA  
                    l729 06F8                      l737 06DF                      l691 0777  
                    l675 06CF                      l739 06EE                      l693 0782  
                    l685 075F                      l695 0786                      l687 0762  
                    l697 078E                      l689 0766                      l699 0796  
                    u200 07C5                      u201 07C4                      u220 07E3  
                    u140 0766                      u221 07E2                      u205 07C1  
                    u141 0765                      u230 07E8                      u150 0777  
                    u231 07E7                      u215 07D5                      u151 0776  
                    u160 0796                      u240 070D                      u161 0795  
                    u250 0726                      u180 07AA                      u181 07A9  
                    u261 0738                      u245 0708                      u262 0739  
                    u175 079B                      u263 073E                      u255 0721  
                    u264 073F                      u265 0744                      u266 0745  
                    u195 07AC                     _main 06DA                     btemp 007E  
                   start 0000          __end_of___aldiv 07FC                    ?_main 0070  
                  _ANSEL 0188      __size_of_COM_EUSART 006B                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTE 0009                    _TRISE 0089  
                  _TXSTA 0098          __end_of_con_mp2 06DA                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 06F4  
                 ??_main 007D                   _ANSELH 0189                ??___aldiv 0078  
     COM_EUSART@baudrate 0026                ??_con_mp2 0070  __end_of__initialization 07FC  
           ??_COM_EUSART 002A           __pcstackCOMMON 0070       __end_of_COM_EUSART 075F  
             __pmaintext 06DA                  ___aldiv 075F                  __ptext1 06CF  
                __ptext2 06F4                  __ptext3 075F                  _con_mp2 06CF  
       ___aldiv@dividend 0074     end_of_initialization 07FC         ___aldiv@quotient 0022  
              _PORTEbits 0009              _BAUDCTLbits 0187      start_initialization 07FC  
              ___latbits 0002            __pcstackBANK0 0020                 ?___aldiv 0070  
               ?_con_mp2 0070          ___aldiv@divisor 0070          ___aldiv@counter 0020  
       __size_of___aldiv 009D         __size_of_con_mp2 000B               _COM_EUSART 06F4  
          __size_of_main 001A             ___aldiv@sign 0021              COM_EUSART@p 0079  
            ?_COM_EUSART 0026  
