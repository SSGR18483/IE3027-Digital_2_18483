

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 23:48:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0009                     _PORTEbits	set	9
   365  001A                     _RCREG	set	26
   366  0019                     _TXREG	set	25
   367  000C                     _PIR1bits	set	12
   368  0008                     _PORTDbits	set	8
   369  000B                     _INTCONbits	set	11
   370  0009                     _PORTE	set	9
   371  0008                     _PORTD	set	8
   372  0018                     _RCSTA	set	24
   373  008C                     _PIE1bits	set	140
   374  0087                     _TRISCbits	set	135
   375  0089                     _TRISE	set	137
   376  0088                     _TRISD	set	136
   377  0099                     _SPBRG	set	153
   378  0098                     _TXSTA	set	152
   379  0189                     _ANSELH	set	393
   380  0188                     _ANSEL	set	392
   381  0187                     _BAUDCTLbits	set	391
   382                           
   383                           	psect	cinit
   384  000F                     start_initialization:	
   385                           ; #config settings
   386                           
   387  000F                     __initialization:
   388                           
   389                           ; Clear objects allocated to COMMON
   390  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   391  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   392  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   393  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   394  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK0
   397  0014  1283               	bcf	3,5	;RP0=0, select bank0
   398  0015  1303               	bcf	3,6	;RP1=0, select bank0
   399  0016  01C3               	clrf	__pbssBANK0& (0+127)
   400  0017  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   401  0018                     end_of_initialization:	
   402                           ;End of C runtime variable initialization code
   403                           
   404  0018                     __end_of__initialization:
   405  0018  0183               	clrf	3
   406  0019  120A  118A  2926   	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  0070                     __pbssCOMMON:
   410  0070                     _cont:
   411  0070                     	ds	2
   412  0072                     _led2:
   413  0072                     	ds	1
   414  0073                     _led1:
   415  0073                     	ds	1
   416  0074                     _escribir:
   417  0074                     	ds	1
   418                           
   419                           	psect	bssBANK0
   420  0043                     __pbssBANK0:
   421  0043                     _leer:
   422  0043                     	ds	2
   423                           
   424                           	psect	cstackCOMMON
   425  0075                     __pcstackCOMMON:
   426  0075                     ?_con_mp2:
   427  0075                     ?_txint:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0075                     ??_txint:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0075                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 1 bytes @ 0x0
   438  0075                     	ds	5
   439                           
   440                           	psect	cstackBANK0
   441  0020                     __pcstackBANK0:
   442  0020                     ??_con_mp2:
   443  0020                     ?___aldiv:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0020                     ___aldiv@divisor:	
   447                           ; 4 bytes @ 0x0
   448                           
   449                           
   450                           ; 4 bytes @ 0x0
   451  0020                     	ds	4
   452  0024                     ___aldiv@dividend:
   453                           
   454                           ; 4 bytes @ 0x4
   455  0024                     	ds	4
   456  0028                     ??___aldiv:
   457                           
   458                           ; 1 bytes @ 0x8
   459  0028                     	ds	1
   460  0029                     ___aldiv@counter:
   461                           
   462                           ; 1 bytes @ 0x9
   463  0029                     	ds	1
   464  002A                     ___aldiv@sign:
   465                           
   466                           ; 1 bytes @ 0xA
   467  002A                     	ds	1
   468  002B                     ___aldiv@quotient:
   469                           
   470                           ; 4 bytes @ 0xB
   471  002B                     	ds	4
   472  002F                     ?_COM_EUSART:
   473  002F                     COM_EUSART@baudrate:	
   474                           ; 1 bytes @ 0xF
   475                           
   476                           
   477                           ; 4 bytes @ 0xF
   478  002F                     	ds	4
   479  0033                     ??_COM_EUSART:
   480                           
   481                           ; 1 bytes @ 0x13
   482  0033                     	ds	12
   483  003F                     COM_EUSART@p:
   484                           
   485                           ; 4 bytes @ 0x1F
   486  003F                     	ds	4
   487  0043                     ??_main:
   488                           
   489                           	psect	maintext
   490  0126                     __pmaintext:	
   491                           ; 1 bytes @ 0x23
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 39 in file "mini2.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels required when called:    3
   517 ;; This function calls:
   518 ;;		_COM_EUSART
   519 ;;		_con_mp2
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _main
   527  0126                     _main:
   528  0126                     l913:	
   529                           ;incstack = 0
   530                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;mini2.c: 40:     con_mp2();
   534  0126  120A  118A  218E  120A  118A  	fcall	_con_mp2
   535  012B                     l915:
   536                           
   537                           ;mini2.c: 41:     COM_EUSART(9600);
   538  012B  3000               	movlw	0
   539  012C  1283               	bcf	3,5	;RP0=0, select bank0
   540  012D  1303               	bcf	3,6	;RP1=0, select bank0
   541  012E  00B2               	movwf	COM_EUSART@baudrate+3
   542  012F  3000               	movlw	0
   543  0130  00B1               	movwf	COM_EUSART@baudrate+2
   544  0131  3025               	movlw	37
   545  0132  00B0               	movwf	COM_EUSART@baudrate+1
   546  0133  3080               	movlw	128
   547  0134  00AF               	movwf	COM_EUSART@baudrate
   548  0135  120A  118A  20B9  120A  118A  	fcall	_COM_EUSART
   549  013A                     l917:
   550                           
   551                           ;mini2.c: 45:         if (leer == 1) {
   552  013A  1283               	bcf	3,5	;RP0=0, select bank0
   553  013B  1303               	bcf	3,6	;RP1=0, select bank0
   554  013C  0343               	decf	_leer,w
   555  013D  0444               	iorwf	_leer+1,w
   556  013E  1D03               	btfss	3,2
   557  013F  2941               	goto	u521
   558  0140  2942               	goto	u520
   559  0141                     u521:
   560  0141  2944               	goto	l921
   561  0142                     u520:
   562  0142                     l919:
   563                           
   564                           ;mini2.c: 46:             PORTEbits.RE0 = 0;
   565  0142  1009               	bcf	9,0	;volatile
   566                           
   567                           ;mini2.c: 47:         } else if (leer == 2) {
   568  0143  293A               	goto	l917
   569  0144                     l921:
   570  0144  3002               	movlw	2
   571  0145  0643               	xorwf	_leer,w
   572  0146  0444               	iorwf	_leer+1,w
   573  0147  1D03               	btfss	3,2
   574  0148  294A               	goto	u531
   575  0149  294B               	goto	u530
   576  014A                     u531:
   577  014A  294D               	goto	l925
   578  014B                     u530:
   579  014B                     l923:
   580                           
   581                           ;mini2.c: 48:             PORTEbits.RE0 = 1;
   582  014B  1409               	bsf	9,0	;volatile
   583                           
   584                           ;mini2.c: 49:         } else if (leer == 3) {
   585  014C  293A               	goto	l917
   586  014D                     l925:
   587  014D  3003               	movlw	3
   588  014E  0643               	xorwf	_leer,w
   589  014F  0444               	iorwf	_leer+1,w
   590  0150  1D03               	btfss	3,2
   591  0151  2953               	goto	u541
   592  0152  2954               	goto	u540
   593  0153                     u541:
   594  0153  2956               	goto	l929
   595  0154                     u540:
   596  0154                     l927:
   597                           
   598                           ;mini2.c: 50:             PORTEbits.RE1 = 0;
   599  0154  1089               	bcf	9,1	;volatile
   600                           
   601                           ;mini2.c: 51:         } else if (leer == 4) {
   602  0155  293A               	goto	l917
   603  0156                     l929:
   604  0156  3004               	movlw	4
   605  0157  0643               	xorwf	_leer,w
   606  0158  0444               	iorwf	_leer+1,w
   607  0159  1D03               	btfss	3,2
   608  015A  295C               	goto	u551
   609  015B  295D               	goto	u550
   610  015C                     u551:
   611  015C  295F               	goto	l77
   612  015D                     u550:
   613  015D                     l931:
   614                           
   615                           ;mini2.c: 52:             PORTEbits.RE1 = 1;
   616  015D  1489               	bsf	9,1	;volatile
   617                           
   618                           ;mini2.c: 53:         }
   619  015E  293A               	goto	l917
   620  015F                     l77:	
   621                           ;mini2.c: 54:         else{
   622                           
   623                           
   624                           ;mini2.c: 55:         PORTEbits.RE0 = 0;
   625  015F  1009               	bcf	9,0	;volatile
   626                           
   627                           ;mini2.c: 56:         PORTEbits.RE1 = 0;}
   628  0160  1089               	bcf	9,1	;volatile
   629  0161  293A               	goto	l917
   630  0162  120A  118A  280C   	ljmp	start
   631  0165                     __end_of_main:
   632                           
   633                           	psect	text1
   634  018E                     __ptext1:	
   635 ;; *************** function _con_mp2 *****************
   636 ;; Defined at:
   637 ;;		line 28 in file "CONM2.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		status,2
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _con_mp2
   667  018E                     _con_mp2:
   668  018E                     l901:	
   669                           ;incstack = 0
   670                           ; Regs used in _con_mp2: [status,2]
   671                           
   672  018E  1683               	bsf	3,5	;RP0=1, select bank3
   673  018F  1703               	bsf	3,6	;RP1=1, select bank3
   674  0190  0188               	clrf	8	;volatile
   675  0191  0189               	clrf	9	;volatile
   676  0192  1683               	bsf	3,5	;RP0=1, select bank1
   677  0193  1303               	bcf	3,6	;RP1=0, select bank1
   678  0194  0188               	clrf	8	;volatile
   679  0195  1283               	bcf	3,5	;RP0=0, select bank0
   680  0196  1303               	bcf	3,6	;RP1=0, select bank0
   681  0197  0188               	clrf	8	;volatile
   682  0198  1683               	bsf	3,5	;RP0=1, select bank1
   683  0199  1303               	bcf	3,6	;RP1=0, select bank1
   684  019A  0189               	clrf	9	;volatile
   685  019B  1283               	bcf	3,5	;RP0=0, select bank0
   686  019C  1303               	bcf	3,6	;RP1=0, select bank0
   687  019D  0189               	clrf	9	;volatile
   688  019E                     l903:
   689  019E  1683               	bsf	3,5	;RP0=1, select bank1
   690  019F  1303               	bcf	3,6	;RP1=0, select bank1
   691  01A0  1387               	bcf	7,7	;volatile
   692  01A1                     l905:
   693  01A1  178B               	bsf	11,7	;volatile
   694  01A2                     l907:
   695  01A2  170B               	bsf	11,6	;volatile
   696  01A3                     l909:
   697  01A3  168C               	bsf	12,5	;volatile
   698  01A4                     l911:
   699  01A4  160C               	bsf	12,4	;volatile
   700  01A5                     l32:
   701  01A5  0008               	return
   702  01A6                     __end_of_con_mp2:
   703                           
   704                           	psect	text2
   705  00B9                     __ptext2:	
   706 ;; *************** function _COM_EUSART *****************
   707 ;; Defined at:
   708 ;;		line 5 in file "UART.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  baudrate        4   15[BANK0 ] const long 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  p               4   31[BANK0 ] long 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0, pclath, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         0       4       0       0       0
   723 ;;      Locals:         0       4       0       0       0
   724 ;;      Temps:          0      12       0       0       0
   725 ;;      Totals:         0      20       0       0       0
   726 ;;Total ram usage:       20 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    2
   729 ;; This function calls:
   730 ;;		___aldiv
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _COM_EUSART
   738  00B9                     _COM_EUSART:
   739  00B9                     l893:	
   740                           ;incstack = 0
   741                           ; Regs used in _COM_EUSART: [wreg+status,2+status,0+pclath+cstack]
   742                           
   743                           
   744                           ;UART.c: 6:     long int p;;UART.c: 7:     TXSTA = 0b00100000;
   745  00B9  3020               	movlw	32
   746  00BA  1683               	bsf	3,5	;RP0=1, select bank1
   747  00BB  1303               	bcf	3,6	;RP1=0, select bank1
   748  00BC  0098               	movwf	24	;volatile
   749  00BD                     l895:
   750                           
   751                           ;UART.c: 8:     BAUDCTLbits.BRG16 = 0;
   752  00BD  1683               	bsf	3,5	;RP0=1, select bank3
   753  00BE  1703               	bsf	3,6	;RP1=1, select bank3
   754  00BF  1187               	bcf	7,3	;volatile
   755                           
   756                           ;UART.c: 9:     RCSTA= 0b10010000;
   757  00C0  3090               	movlw	144
   758  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   759  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   760  00C3  0098               	movwf	24	;volatile
   761  00C4                     l897:
   762                           
   763                           ;UART.c: 10:     p = (8000000 - baudrate*64)/(baudrate*64);
   764  00C4  082F               	movf	COM_EUSART@baudrate,w
   765  00C5  00B3               	movwf	??_COM_EUSART
   766  00C6  0830               	movf	COM_EUSART@baudrate+1,w
   767  00C7  00B4               	movwf	??_COM_EUSART+1
   768  00C8  0831               	movf	COM_EUSART@baudrate+2,w
   769  00C9  00B5               	movwf	??_COM_EUSART+2
   770  00CA  0832               	movf	COM_EUSART@baudrate+3,w
   771  00CB  00B6               	movwf	??_COM_EUSART+3
   772  00CC  3006               	movlw	6
   773  00CD                     u495:
   774  00CD  1003               	clrc
   775  00CE  0DB3               	rlf	??_COM_EUSART,f
   776  00CF  0DB4               	rlf	??_COM_EUSART+1,f
   777  00D0  0DB5               	rlf	??_COM_EUSART+2,f
   778  00D1  0DB6               	rlf	??_COM_EUSART+3,f
   779  00D2                     u490:
   780  00D2  3EFF               	addlw	-1
   781  00D3  1D03               	skipz
   782  00D4  28CD               	goto	u495
   783  00D5  0836               	movf	??_COM_EUSART+3,w
   784  00D6  00A3               	movwf	___aldiv@divisor+3
   785  00D7  0835               	movf	??_COM_EUSART+2,w
   786  00D8  00A2               	movwf	___aldiv@divisor+2
   787  00D9  0834               	movf	??_COM_EUSART+1,w
   788  00DA  00A1               	movwf	___aldiv@divisor+1
   789  00DB  0833               	movf	??_COM_EUSART,w
   790  00DC  00A0               	movwf	___aldiv@divisor
   791  00DD  082F               	movf	COM_EUSART@baudrate,w
   792  00DE  00B7               	movwf	??_COM_EUSART+4
   793  00DF  0830               	movf	COM_EUSART@baudrate+1,w
   794  00E0  00B8               	movwf	??_COM_EUSART+5
   795  00E1  0831               	movf	COM_EUSART@baudrate+2,w
   796  00E2  00B9               	movwf	??_COM_EUSART+6
   797  00E3  0832               	movf	COM_EUSART@baudrate+3,w
   798  00E4  00BA               	movwf	??_COM_EUSART+7
   799  00E5  3006               	movlw	6
   800  00E6                     u505:
   801  00E6  1003               	clrc
   802  00E7  0DB7               	rlf	??_COM_EUSART+4,f
   803  00E8  0DB8               	rlf	??_COM_EUSART+5,f
   804  00E9  0DB9               	rlf	??_COM_EUSART+6,f
   805  00EA  0DBA               	rlf	??_COM_EUSART+7,f
   806  00EB                     u500:
   807  00EB  3EFF               	addlw	-1
   808  00EC  1D03               	skipz
   809  00ED  28E6               	goto	u505
   810  00EE  3000               	movlw	0
   811  00EF  00BB               	movwf	??_COM_EUSART+8
   812  00F0  3012               	movlw	18
   813  00F1  00BC               	movwf	??_COM_EUSART+9
   814  00F2  307A               	movlw	122
   815  00F3  00BD               	movwf	??_COM_EUSART+10
   816  00F4  3000               	movlw	0
   817  00F5  00BE               	movwf	??_COM_EUSART+11
   818  00F6  0837               	movf	??_COM_EUSART+4,w
   819  00F7  02BB               	subwf	??_COM_EUSART+8,f
   820  00F8  0838               	movf	??_COM_EUSART+5,w
   821  00F9  1C03               	skipc
   822  00FA  0F38               	incfsz	??_COM_EUSART+5,w
   823  00FB  28FD               	goto	u511
   824  00FC  28FE               	goto	u512
   825  00FD                     u511:
   826  00FD  02BC               	subwf	??_COM_EUSART+9,f
   827  00FE                     u512:
   828  00FE  0839               	movf	??_COM_EUSART+6,w
   829  00FF  1C03               	skipc
   830  0100  0F39               	incfsz	??_COM_EUSART+6,w
   831  0101  2903               	goto	u513
   832  0102  2904               	goto	u514
   833  0103                     u513:
   834  0103  02BD               	subwf	??_COM_EUSART+10,f
   835  0104                     u514:
   836  0104  083A               	movf	??_COM_EUSART+7,w
   837  0105  1C03               	skipc
   838  0106  0F3A               	incfsz	??_COM_EUSART+7,w
   839  0107  2909               	goto	u515
   840  0108  290A               	goto	u516
   841  0109                     u515:
   842  0109  02BE               	subwf	??_COM_EUSART+11,f
   843  010A                     u516:
   844  010A  083E               	movf	??_COM_EUSART+11,w
   845  010B  00A7               	movwf	___aldiv@dividend+3
   846  010C  083D               	movf	??_COM_EUSART+10,w
   847  010D  00A6               	movwf	___aldiv@dividend+2
   848  010E  083C               	movf	??_COM_EUSART+9,w
   849  010F  00A5               	movwf	___aldiv@dividend+1
   850  0110  083B               	movf	??_COM_EUSART+8,w
   851  0111  00A4               	movwf	___aldiv@dividend
   852  0112  120A  118A  201C  120A  118A  	fcall	___aldiv
   853  0117  1283               	bcf	3,5	;RP0=0, select bank0
   854  0118  1303               	bcf	3,6	;RP1=0, select bank0
   855  0119  0823               	movf	?___aldiv+3,w
   856  011A  00C2               	movwf	COM_EUSART@p+3
   857  011B  0822               	movf	?___aldiv+2,w
   858  011C  00C1               	movwf	COM_EUSART@p+2
   859  011D  0821               	movf	?___aldiv+1,w
   860  011E  00C0               	movwf	COM_EUSART@p+1
   861  011F  0820               	movf	?___aldiv,w
   862  0120  00BF               	movwf	COM_EUSART@p
   863  0121                     l899:
   864                           
   865                           ;UART.c: 11:     SPBRG = p;
   866  0121  083F               	movf	COM_EUSART@p,w
   867  0122  1683               	bsf	3,5	;RP0=1, select bank1
   868  0123  1303               	bcf	3,6	;RP1=0, select bank1
   869  0124  0099               	movwf	25	;volatile
   870  0125                     l11:
   871  0125  0008               	return
   872  0126                     __end_of_COM_EUSART:
   873                           
   874                           	psect	text3
   875  001C                     __ptext3:	
   876 ;; *************** function ___aldiv *****************
   877 ;; Defined at:
   878 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  divisor         4    0[BANK0 ] long 
   881 ;;  dividend        4    4[BANK0 ] long 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  quotient        4   11[BANK0 ] long 
   884 ;;  sign            1   10[BANK0 ] unsigned char 
   885 ;;  counter         1    9[BANK0 ] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  4    0[BANK0 ] long 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       8       0       0       0
   896 ;;      Locals:         0       6       0       0       0
   897 ;;      Temps:          0       1       0       0       0
   898 ;;      Totals:         0      15       0       0       0
   899 ;;Total ram usage:       15 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_COM_EUSART
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function ___aldiv
   911  001C                     ___aldiv:
   912  001C                     l853:	
   913                           ;incstack = 0
   914                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   915                           
   916  001C  1283               	bcf	3,5	;RP0=0, select bank0
   917  001D  1303               	bcf	3,6	;RP1=0, select bank0
   918  001E  01AA               	clrf	___aldiv@sign
   919  001F                     l855:
   920  001F  1FA3               	btfss	___aldiv@divisor+3,7
   921  0020  2822               	goto	u391
   922  0021  2823               	goto	u390
   923  0022                     u391:
   924  0022  2830               	goto	l232
   925  0023                     u390:
   926  0023                     l857:
   927  0023  09A0               	comf	___aldiv@divisor,f
   928  0024  09A1               	comf	___aldiv@divisor+1,f
   929  0025  09A2               	comf	___aldiv@divisor+2,f
   930  0026  09A3               	comf	___aldiv@divisor+3,f
   931  0027  0AA0               	incf	___aldiv@divisor,f
   932  0028  1903               	skipnz
   933  0029  0AA1               	incf	___aldiv@divisor+1,f
   934  002A  1903               	skipnz
   935  002B  0AA2               	incf	___aldiv@divisor+2,f
   936  002C  1903               	skipnz
   937  002D  0AA3               	incf	___aldiv@divisor+3,f
   938  002E  01AA               	clrf	___aldiv@sign
   939  002F  0AAA               	incf	___aldiv@sign,f
   940  0030                     l232:
   941  0030  1FA7               	btfss	___aldiv@dividend+3,7
   942  0031  2833               	goto	u401
   943  0032  2834               	goto	u400
   944  0033                     u401:
   945  0033  2843               	goto	l863
   946  0034                     u400:
   947  0034                     l859:
   948  0034  09A4               	comf	___aldiv@dividend,f
   949  0035  09A5               	comf	___aldiv@dividend+1,f
   950  0036  09A6               	comf	___aldiv@dividend+2,f
   951  0037  09A7               	comf	___aldiv@dividend+3,f
   952  0038  0AA4               	incf	___aldiv@dividend,f
   953  0039  1903               	skipnz
   954  003A  0AA5               	incf	___aldiv@dividend+1,f
   955  003B  1903               	skipnz
   956  003C  0AA6               	incf	___aldiv@dividend+2,f
   957  003D  1903               	skipnz
   958  003E  0AA7               	incf	___aldiv@dividend+3,f
   959  003F                     l861:
   960  003F  3001               	movlw	1
   961  0040  00A8               	movwf	??___aldiv
   962  0041  0828               	movf	??___aldiv,w
   963  0042  06AA               	xorwf	___aldiv@sign,f
   964  0043                     l863:
   965  0043  3000               	movlw	0
   966  0044  00AE               	movwf	___aldiv@quotient+3
   967  0045  3000               	movlw	0
   968  0046  00AD               	movwf	___aldiv@quotient+2
   969  0047  3000               	movlw	0
   970  0048  00AC               	movwf	___aldiv@quotient+1
   971  0049  3000               	movlw	0
   972  004A  00AB               	movwf	___aldiv@quotient
   973  004B                     l865:
   974  004B  0823               	movf	___aldiv@divisor+3,w
   975  004C  0422               	iorwf	___aldiv@divisor+2,w
   976  004D  0421               	iorwf	___aldiv@divisor+1,w
   977  004E  0420               	iorwf	___aldiv@divisor,w
   978  004F  1903               	skipnz
   979  0050  2852               	goto	u411
   980  0051  2853               	goto	u410
   981  0052                     u411:
   982  0052  28A0               	goto	l885
   983  0053                     u410:
   984  0053                     l867:
   985  0053  01A9               	clrf	___aldiv@counter
   986  0054  0AA9               	incf	___aldiv@counter,f
   987  0055  2863               	goto	l871
   988  0056                     l869:
   989  0056  3001               	movlw	1
   990  0057  00A8               	movwf	??___aldiv
   991  0058                     u425:
   992  0058  1003               	clrc
   993  0059  0DA0               	rlf	___aldiv@divisor,f
   994  005A  0DA1               	rlf	___aldiv@divisor+1,f
   995  005B  0DA2               	rlf	___aldiv@divisor+2,f
   996  005C  0DA3               	rlf	___aldiv@divisor+3,f
   997  005D  0BA8               	decfsz	??___aldiv,f
   998  005E  2858               	goto	u425
   999  005F  3001               	movlw	1
  1000  0060  00A8               	movwf	??___aldiv
  1001  0061  0828               	movf	??___aldiv,w
  1002  0062  07A9               	addwf	___aldiv@counter,f
  1003  0063                     l871:
  1004  0063  1FA3               	btfss	___aldiv@divisor+3,7
  1005  0064  2866               	goto	u431
  1006  0065  2867               	goto	u430
  1007  0066                     u431:
  1008  0066  2856               	goto	l869
  1009  0067                     u430:
  1010  0067                     l873:
  1011  0067  3001               	movlw	1
  1012  0068  00A8               	movwf	??___aldiv
  1013  0069                     u445:
  1014  0069  1003               	clrc
  1015  006A  0DAB               	rlf	___aldiv@quotient,f
  1016  006B  0DAC               	rlf	___aldiv@quotient+1,f
  1017  006C  0DAD               	rlf	___aldiv@quotient+2,f
  1018  006D  0DAE               	rlf	___aldiv@quotient+3,f
  1019  006E  0BA8               	decfsz	??___aldiv,f
  1020  006F  2869               	goto	u445
  1021  0070                     l875:
  1022  0070  0823               	movf	___aldiv@divisor+3,w
  1023  0071  0227               	subwf	___aldiv@dividend+3,w
  1024  0072  1D03               	skipz
  1025  0073  287E               	goto	u455
  1026  0074  0822               	movf	___aldiv@divisor+2,w
  1027  0075  0226               	subwf	___aldiv@dividend+2,w
  1028  0076  1D03               	skipz
  1029  0077  287E               	goto	u455
  1030  0078  0821               	movf	___aldiv@divisor+1,w
  1031  0079  0225               	subwf	___aldiv@dividend+1,w
  1032  007A  1D03               	skipz
  1033  007B  287E               	goto	u455
  1034  007C  0820               	movf	___aldiv@divisor,w
  1035  007D  0224               	subwf	___aldiv@dividend,w
  1036  007E                     u455:
  1037  007E  1C03               	skipc
  1038  007F  2881               	goto	u451
  1039  0080  2882               	goto	u450
  1040  0081                     u451:
  1041  0081  2891               	goto	l881
  1042  0082                     u450:
  1043  0082                     l877:
  1044  0082  0820               	movf	___aldiv@divisor,w
  1045  0083  02A4               	subwf	___aldiv@dividend,f
  1046  0084  0821               	movf	___aldiv@divisor+1,w
  1047  0085  1C03               	skipc
  1048  0086  0F21               	incfsz	___aldiv@divisor+1,w
  1049  0087  02A5               	subwf	___aldiv@dividend+1,f
  1050  0088  0822               	movf	___aldiv@divisor+2,w
  1051  0089  1C03               	skipc
  1052  008A  0F22               	incfsz	___aldiv@divisor+2,w
  1053  008B  02A6               	subwf	___aldiv@dividend+2,f
  1054  008C  0823               	movf	___aldiv@divisor+3,w
  1055  008D  1C03               	skipc
  1056  008E  0F23               	incfsz	___aldiv@divisor+3,w
  1057  008F  02A7               	subwf	___aldiv@dividend+3,f
  1058  0090                     l879:
  1059  0090  142B               	bsf	___aldiv@quotient,0
  1060  0091                     l881:
  1061  0091  3001               	movlw	1
  1062  0092                     u465:
  1063  0092  1003               	clrc
  1064  0093  0CA3               	rrf	___aldiv@divisor+3,f
  1065  0094  0CA2               	rrf	___aldiv@divisor+2,f
  1066  0095  0CA1               	rrf	___aldiv@divisor+1,f
  1067  0096  0CA0               	rrf	___aldiv@divisor,f
  1068  0097  3EFF               	addlw	-1
  1069  0098  1D03               	skipz
  1070  0099  2892               	goto	u465
  1071  009A                     l883:
  1072  009A  3001               	movlw	1
  1073  009B  02A9               	subwf	___aldiv@counter,f
  1074  009C  1D03               	btfss	3,2
  1075  009D  289F               	goto	u471
  1076  009E  28A0               	goto	u470
  1077  009F                     u471:
  1078  009F  2867               	goto	l873
  1079  00A0                     u470:
  1080  00A0                     l885:
  1081  00A0  082A               	movf	___aldiv@sign,w
  1082  00A1  1903               	btfsc	3,2
  1083  00A2  28A4               	goto	u481
  1084  00A3  28A5               	goto	u480
  1085  00A4                     u481:
  1086  00A4  28B0               	goto	l889
  1087  00A5                     u480:
  1088  00A5                     l887:
  1089  00A5  09AB               	comf	___aldiv@quotient,f
  1090  00A6  09AC               	comf	___aldiv@quotient+1,f
  1091  00A7  09AD               	comf	___aldiv@quotient+2,f
  1092  00A8  09AE               	comf	___aldiv@quotient+3,f
  1093  00A9  0AAB               	incf	___aldiv@quotient,f
  1094  00AA  1903               	skipnz
  1095  00AB  0AAC               	incf	___aldiv@quotient+1,f
  1096  00AC  1903               	skipnz
  1097  00AD  0AAD               	incf	___aldiv@quotient+2,f
  1098  00AE  1903               	skipnz
  1099  00AF  0AAE               	incf	___aldiv@quotient+3,f
  1100  00B0                     l889:
  1101  00B0  082E               	movf	___aldiv@quotient+3,w
  1102  00B1  00A3               	movwf	?___aldiv+3
  1103  00B2  082D               	movf	___aldiv@quotient+2,w
  1104  00B3  00A2               	movwf	?___aldiv+2
  1105  00B4  082C               	movf	___aldiv@quotient+1,w
  1106  00B5  00A1               	movwf	?___aldiv+1
  1107  00B6  082B               	movf	___aldiv@quotient,w
  1108  00B7  00A0               	movwf	?___aldiv
  1109  00B8                     l242:
  1110  00B8  0008               	return
  1111  00B9                     __end_of___aldiv:
  1112                           
  1113                           	psect	text4
  1114  0165                     __ptext4:	
  1115 ;; *************** function _txint *****************
  1116 ;; Defined at:
  1117 ;;		line 19 in file "mini2.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0
  1133 ;;      Temps:          5       0       0       0       0
  1134 ;;      Totals:         5       0       0       0       0
  1135 ;;Total ram usage:        5 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		Interrupt level 1
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           
  1145                           ;psect for function _txint
  1146  0165                     _txint:
  1147  0165                     i1l823:
  1148                           
  1149                           ;mini2.c: 27:     PORTDbits.RD2 =1;
  1150  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0167  1508               	bsf	8,2	;volatile
  1153                           
  1154                           ;mini2.c: 28:     if (PIR1bits.TXIF == 1) {
  1155  0168  1E0C               	btfss	12,4	;volatile
  1156  0169  296B               	goto	u33_21
  1157  016A  296C               	goto	u33_20
  1158  016B                     u33_21:
  1159  016B  296E               	goto	i1l827
  1160  016C                     u33_20:
  1161  016C                     i1l825:
  1162                           
  1163                           ;mini2.c: 29:         TXREG = escribir;
  1164  016C  0874               	movf	_escribir,w
  1165  016D  0099               	movwf	25	;volatile
  1166  016E                     i1l827:
  1167                           
  1168                           ;mini2.c: 32:     if (PIR1bits.RCIF == 1) {
  1169  016E  1E8C               	btfss	12,5	;volatile
  1170  016F  2971               	goto	u34_21
  1171  0170  2972               	goto	u34_20
  1172  0171                     u34_21:
  1173  0171  2987               	goto	i1l65
  1174  0172                     u34_20:
  1175  0172                     i1l829:
  1176                           
  1177                           ;mini2.c: 33:         leer = RCREG;
  1178  0172  081A               	movf	26,w	;volatile
  1179  0173  00F5               	movwf	??_txint
  1180  0174  01F6               	clrf	??_txint+1
  1181  0175  0875               	movf	??_txint,w
  1182  0176  00C3               	movwf	_leer
  1183  0177  0876               	movf	??_txint+1,w
  1184  0178  00C4               	movwf	_leer+1
  1185  0179                     i1l831:
  1186                           
  1187                           ;mini2.c: 34:         PORTDbits.RD2 = 0;
  1188  0179  1108               	bcf	8,2	;volatile
  1189                           
  1190                           ;mini2.c: 35:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1191  017A  3006               	movlw	6
  1192  017B  00F7               	movwf	??_txint+2
  1193  017C  3013               	movlw	19
  1194  017D  00F6               	movwf	??_txint+1
  1195  017E  30AD               	movlw	173
  1196  017F  00F5               	movwf	??_txint
  1197  0180                     u56_27:
  1198  0180  0BF5               	decfsz	??_txint,f
  1199  0181  2980               	goto	u56_27
  1200  0182  0BF6               	decfsz	??_txint+1,f
  1201  0183  2980               	goto	u56_27
  1202  0184  0BF7               	decfsz	??_txint+2,f
  1203  0185  2980               	goto	u56_27
  1204  0186  2987               	nop2
  1205  0187                     i1l65:
  1206  0187  0879               	movf	??_txint+4,w
  1207  0188  008A               	movwf	10
  1208  0189  0E78               	swapf	??_txint+3,w
  1209  018A  0083               	movwf	3
  1210  018B  0EFE               	swapf	btemp,f
  1211  018C  0E7E               	swapf	btemp,w
  1212  018D  0009               	retfie
  1213  018E                     __end_of_txint:
  1214  007E                     btemp	set	126	;btemp
  1215  007E                     wtemp0	set	126
  1216                           
  1217                           	psect	intentry
  1218  0004                     __pintentry:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _txint: [wreg]
  1221                           
  1222  0004                     interrupt_function:
  1223  007E                     saved_w	set	btemp
  1224  0004  00FE               	movwf	btemp
  1225  0005  0E03               	swapf	3,w
  1226  0006  00F8               	movwf	??_txint+3
  1227  0007  080A               	movf	10,w
  1228  0008  00F9               	movwf	??_txint+4
  1229  0009  120A  118A  2965   	ljmp	_txint
  1230                           
  1231                           	psect	config
  1232                           
  1233                           ;Config register CONFIG1 @ 0x2007
  1234                           ;	Oscillator Selection bits
  1235                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1236                           ;	Watchdog Timer Enable bit
  1237                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1238                           ;	Power-up Timer Enable bit
  1239                           ;	PWRTE = ON, PWRT enabled
  1240                           ;	RE3/MCLR pin function select bit
  1241                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1242                           ;	Code Protection bit
  1243                           ;	CP = OFF, Program memory code protection is disabled
  1244                           ;	Data Code Protection bit
  1245                           ;	CPD = OFF, Data memory code protection is disabled
  1246                           ;	Brown Out Reset Selection bits
  1247                           ;	BOREN = OFF, BOR disabled
  1248                           ;	Internal External Switchover bit
  1249                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1250                           ;	Fail-Safe Clock Monitor Enabled bit
  1251                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1252                           ;	Low Voltage Programming Enable bit
  1253                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1254                           ;	In-Circuit Debugger Mode bit
  1255                           ;	DEBUG = 0x1, unprogrammed default
  1256  2007                     	org	8199
  1257  2007  20C4               	dw	8388
  1258                           
  1259                           ;Config register CONFIG2 @ 0x2008
  1260                           ;	Brown-out Reset Selection bit
  1261                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1262                           ;	Flash Program Memory Self Write Enable bits
  1263                           ;	WRT = OFF, Write protection off
  1264  2008                     	org	8200
  1265  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     35      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _txint in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_COM_EUSART
    _COM_EUSART->___aldiv

Critical Paths under _txint in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _txint in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _txint in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _txint in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     811
                         _COM_EUSART
                            _con_mp2
 ---------------------------------------------------------------------------------
 (1) _con_mp2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _COM_EUSART                                          20    16      4     811
                                             15 BANK0     20    16      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _txint                                                5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COM_EUSART
     ___aldiv
   _con_mp2

 _txint (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     23      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 23:48:28 2021

                     l11 0125                       l32 01A5                       l77 015F  
                    l232 0030                      l242 00B8                      l901 018E  
                    l911 01A4                      l903 019E                      l905 01A1  
                    l921 0144                      l913 0126                      l907 01A2  
                    l931 015D                      l923 014B                      l915 012B  
                    l861 003F                      l853 001C                      l909 01A3  
                    l925 014D                      l917 013A                      l871 0063  
                    l863 0043                      l855 001F                      l927 0154  
                    l919 0142                      l881 0091                      l873 0067  
                    l865 004B                      l857 0023                      l929 0156  
                    l883 009A                      l875 0070                      l867 0053  
                    l859 0034                      l877 0082                      l869 0056  
                    l885 00A0                      l893 00B9                      l887 00A5  
                    l879 0090                      l895 00BD                      l889 00B0  
                    l897 00C4                      l899 0121                      u400 0034  
                    u401 0033                      u410 0053                      u411 0052  
                    u500 00EB                      u430 0067                      u431 0066  
                    u511 00FD                      u512 00FE                      u520 0142  
                    u425 0058                      u513 0103                      u505 00E6  
                    u521 0141                      u450 0082                      u514 0104  
                    u530 014B                      u451 0081                      u515 0109  
                    u531 014A                      u516 010A                      u540 0154  
                    u445 0069                      u541 0153                      u470 00A0  
                    u390 0023                      u550 015D                      u471 009F  
                    u455 007E                      u391 0022                      u551 015C  
                    u480 00A5                      u481 00A4                      u465 0092  
                    u490 00D2                      u495 00CD                     i1l65 0187  
                   _led1 0073                     _led2 0072                     _cont 0070  
                   _main 0126                     _leer 0043                     btemp 007E  
                   start 000C          __end_of___aldiv 00B9                    ?_main 0075  
                  _ANSEL 0188      __size_of_COM_EUSART 006D                    i1l831 0179  
                  i1l823 0165                    i1l825 016C                    i1l827 016E  
                  i1l829 0172                    _RCREG 001A                    _RCSTA 0018  
                  u33_20 016C                    u33_21 016B                    u34_20 0172  
                  u34_21 0171                    _SPBRG 0099                    _PORTD 0008  
                  _PORTE 0009                    u56_27 0180                    _TRISD 0088  
                  _TRISE 0089                    _TXREG 0019                    _TXSTA 0098  
        __end_of_con_mp2 01A6                    _txint 0165                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0165                   ??_main 0043                   _ANSELH 0189  
                 ?_txint 0075                ??___aldiv 0028       COM_EUSART@baudrate 002F  
              ??_con_mp2 0020                   saved_w 007E  __end_of__initialization 0018  
           ??_COM_EUSART 0033           __pcstackCOMMON 0075            __end_of_txint 018E  
     __end_of_COM_EUSART 0126                  ??_txint 0075               __pbssBANK0 0043  
             __pmaintext 0126               __pintentry 0004                  ___aldiv 001C  
                __ptext1 018E                  __ptext2 00B9                  __ptext3 001C  
                __ptext4 0165                  _con_mp2 018E         ___aldiv@dividend 0024  
   end_of_initialization 0018         ___aldiv@quotient 002B                _PORTDbits 0008  
              _PORTEbits 0009                _TRISCbits 0087              _BAUDCTLbits 0187  
    start_initialization 000F              __pbssCOMMON 0070                ___latbits 0002  
          __pcstackBANK0 0020                 ?___aldiv 0020                 ?_con_mp2 0075  
         __size_of_txint 0029          ___aldiv@divisor 0020        interrupt_function 0004  
        ___aldiv@counter 0029                 _PIE1bits 008C                 _PIR1bits 000C  
       __size_of___aldiv 009D         __size_of_con_mp2 0018                 _escribir 0074  
             _COM_EUSART 00B9            __size_of_main 003F               _INTCONbits 000B  
               intlevel1 0000             ___aldiv@sign 002A              COM_EUSART@p 003F  
            ?_COM_EUSART 002F  
