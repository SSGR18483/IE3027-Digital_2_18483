

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Feb 13 01:13:06 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  008F                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0105                     	;# 
   429  0107                     	;# 
   430  0108                     	;# 
   431  0109                     	;# 
   432  010C                     	;# 
   433  010C                     	;# 
   434  010D                     	;# 
   435  010E                     	;# 
   436  010F                     	;# 
   437  0185                     	;# 
   438  0187                     	;# 
   439  0188                     	;# 
   440  0189                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0000                     	;# 
   444  0001                     	;# 
   445  0002                     	;# 
   446  0003                     	;# 
   447  0004                     	;# 
   448  0005                     	;# 
   449  0006                     	;# 
   450  0007                     	;# 
   451  0008                     	;# 
   452  0009                     	;# 
   453  000A                     	;# 
   454  000B                     	;# 
   455  000C                     	;# 
   456  000D                     	;# 
   457  000E                     	;# 
   458  000E                     	;# 
   459  000F                     	;# 
   460  0010                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0013                     	;# 
   464  0014                     	;# 
   465  0015                     	;# 
   466  0015                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001B                     	;# 
   474  001C                     	;# 
   475  001D                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  0081                     	;# 
   479  0085                     	;# 
   480  0086                     	;# 
   481  0087                     	;# 
   482  0088                     	;# 
   483  0089                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  008F                     	;# 
   488  0090                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0093                     	;# 
   494  0094                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009C                     	;# 
   503  009D                     	;# 
   504  009E                     	;# 
   505  009F                     	;# 
   506  0105                     	;# 
   507  0107                     	;# 
   508  0108                     	;# 
   509  0109                     	;# 
   510  010C                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  010F                     	;# 
   515  0185                     	;# 
   516  0187                     	;# 
   517  0188                     	;# 
   518  0189                     	;# 
   519  018C                     	;# 
   520  018D                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000D                     	;# 
   535  000E                     	;# 
   536  000E                     	;# 
   537  000F                     	;# 
   538  0010                     	;# 
   539  0011                     	;# 
   540  0012                     	;# 
   541  0013                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0017                     	;# 
   547  0018                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001B                     	;# 
   552  001C                     	;# 
   553  001D                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  0081                     	;# 
   557  0085                     	;# 
   558  0086                     	;# 
   559  0087                     	;# 
   560  0088                     	;# 
   561  0089                     	;# 
   562  008C                     	;# 
   563  008D                     	;# 
   564  008E                     	;# 
   565  008F                     	;# 
   566  0090                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0093                     	;# 
   570  0093                     	;# 
   571  0093                     	;# 
   572  0094                     	;# 
   573  0095                     	;# 
   574  0096                     	;# 
   575  0097                     	;# 
   576  0098                     	;# 
   577  0099                     	;# 
   578  009A                     	;# 
   579  009B                     	;# 
   580  009C                     	;# 
   581  009D                     	;# 
   582  009E                     	;# 
   583  009F                     	;# 
   584  0105                     	;# 
   585  0107                     	;# 
   586  0108                     	;# 
   587  0109                     	;# 
   588  010C                     	;# 
   589  010C                     	;# 
   590  010D                     	;# 
   591  010E                     	;# 
   592  010F                     	;# 
   593  0185                     	;# 
   594  0187                     	;# 
   595  0188                     	;# 
   596  0189                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599  0007                     _PORTC	set	7
   600  0006                     _PORTB	set	6
   601  0005                     _PORTA	set	5
   602  000B                     _INTCONbits	set	11
   603  0008                     _PORTD	set	8
   604  001F                     _ADCON0	set	31
   605  0037                     _RB7	set	55
   606  0036                     _RB6	set	54
   607  0088                     _TRISD	set	136
   608  0087                     _TRISC	set	135
   609  0086                     _TRISB	set	134
   610  0085                     _TRISA	set	133
   611  009F                     _ADCON1	set	159
   612  008C                     _PIE1bits	set	140
   613  0189                     _ANSELH	set	393
   614  0188                     _ANSEL	set	392
   615                           
   616                           	psect	strings
   617  0003                     __pstrings:
   618  0003                     stringtab:
   619  0003                     __stringtab:
   620  0003                     stringcode:	
   621                           ;	String table - string pointers are 1 byte each
   622                           
   623  0003                     stringdir:
   624  0003  3000               	movlw	high stringdir
   625  0004  008A               	movwf	10
   626  0005  0804               	movf	4,w
   627  0006  0A84               	incf	4,f
   628  0007  0782               	addwf	2,f
   629  0008                     __stringbase:
   630  0008  3400               	retlw	0
   631  0009                     __end_of__stringtab:
   632  0009                     STR_1:
   633  0009  3468               	retlw	104	;'h'
   634  000A  346F               	retlw	111	;'o'
   635  000B  346C               	retlw	108	;'l'
   636  000C  3461               	retlw	97	;'a'
   637  000D  3420               	retlw	32	;' '
   638  000E  346D               	retlw	109	;'m'
   639  000F  3475               	retlw	117	;'u'
   640  0010  346E               	retlw	110	;'n'
   641  0011  3464               	retlw	100	;'d'
   642  0012  346F               	retlw	111	;'o'
   643  0013  3400               	retlw	0
   644                           
   645                           	psect	cinit
   646  07FC                     start_initialization:	
   647                           ; #config settings
   648                           
   649  07FC                     __initialization:
   650  07FC                     end_of_initialization:	
   651                           ;End of C runtime variable initialization code
   652                           
   653  07FC                     __end_of__initialization:
   654  07FC  0183               	clrf	3
   655  07FD  120A  118A  2F87   	ljmp	_main	;jump to C main() function
   656                           
   657                           	psect	cstackCOMMON
   658  0070                     __pcstackCOMMON:
   659  0070                     ?_ADCL_con:
   660  0070                     ??_ADCL_con:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_Lcd_Port:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_Lcd_Port:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_Lcd_Cmd:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_Lcd_Init:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Lcd_Write_Char:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Lcd_Write_String:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_intr:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ??_intr:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_setup:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ??_setup:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_main:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     Lcd_Port@a:	
   697                           ; 1 bytes @ 0x0
   698                           
   699                           
   700                           ; 1 bytes @ 0x0
   701  0070                     	ds	1
   702  0071                     ??_Lcd_Cmd:
   703  0071                     ??_Lcd_Write_Char:	
   704                           ; 1 bytes @ 0x1
   705                           
   706                           
   707                           ; 1 bytes @ 0x1
   708  0071                     	ds	1
   709  0072                     Lcd_Write_Char@a:
   710                           
   711                           ; 1 bytes @ 0x2
   712  0072                     	ds	1
   713  0073                     ??_Lcd_Write_String:
   714  0073                     Lcd_Cmd@a:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     Lcd_Write_String@i:	
   718                           ; 1 bytes @ 0x3
   719                           
   720                           
   721                           ; 2 bytes @ 0x3
   722  0073                     	ds	1
   723  0074                     ??_Lcd_Init:
   724                           
   725                           ; 1 bytes @ 0x4
   726  0074                     	ds	1
   727  0075                     Lcd_Write_String@a:
   728                           
   729                           ; 1 bytes @ 0x5
   730  0075                     	ds	1
   731  0076                     ??_main:
   732                           
   733                           ; 1 bytes @ 0x6
   734  0076                     	ds	2
   735                           
   736                           	psect	maintext
   737  0787                     __pmaintext:	
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 18 in file "Lab3.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : B00/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          2       0       0       0       0
   760 ;;      Totals:         2       0       0       0       0
   761 ;;Total ram usage:        2 bytes
   762 ;; Hardware stack levels required when called:    3
   763 ;; This function calls:
   764 ;;		_ADCL_con
   765 ;;		_Lcd_Init
   766 ;;		_Lcd_Write_String
   767 ;;		_intr
   768 ;;		_setup
   769 ;; This function is called by:
   770 ;;		Startup code after reset
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _main
   776  0787                     _main:
   777  0787                     l785:	
   778                           ;incstack = 0
   779                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   780                           
   781                           
   782                           ;Lab3.c: 19:     setup();
   783  0787  120A  118A  271F  120A  118A  	fcall	_setup
   784  078C                     l787:
   785                           
   786                           ;Lab3.c: 20:     intr();
   787  078C  120A  118A  270E  120A  118A  	fcall	_intr
   788  0791                     l789:
   789                           
   790                           ;Lab3.c: 21:     ADCL_con();
   791  0791  120A  118A  2714  120A  118A  	fcall	_ADCL_con
   792  0796                     l791:
   793                           
   794                           ;Lab3.c: 22:     _delay((unsigned long)((25)*(8000000/4000000.0)));
   795  0796  3010               	movlw	16
   796  0797  00F6               	movwf	??_main
   797  0798                     u57:
   798  0798  0BF6               	decfsz	??_main,f
   799  0799  2F98               	goto	u57
   800  079A  0000               	nop
   801                           
   802                           ;Lab3.c: 23:     Lcd_Init();
   803  079B  120A  118A  27B1  120A  118A  	fcall	_Lcd_Init
   804  07A0                     l793:
   805                           
   806                           ;Lab3.c: 24:     _delay((unsigned long)((11)*(8000000/4000.0)));
   807  07A0  301D               	movlw	29
   808  07A1  00F7               	movwf	??_main+1
   809  07A2  3091               	movlw	145
   810  07A3  00F6               	movwf	??_main
   811  07A4                     u67:
   812  07A4  0BF6               	decfsz	??_main,f
   813  07A5  2FA4               	goto	u67
   814  07A6  0BF7               	decfsz	??_main+1,f
   815  07A7  2FA4               	goto	u67
   816  07A8                     l795:
   817                           
   818                           ;Lab3.c: 25:     Lcd_Write_String("hola mundo");
   819  07A8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   820  07A9  120A  118A  2762  120A  118A  	fcall	_Lcd_Write_String
   821  07AE                     l97:
   822  07AE  120A  118A  2800   	ljmp	start
   823  07B1                     __end_of_main:
   824                           
   825                           	psect	text1
   826  071F                     __ptext1:	
   827 ;; *************** function _setup *****************
   828 ;; Defined at:
   829 ;;		line 11 in file "CONFIG.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0
   846 ;;      Totals:         0       0       0       0       0
   847 ;;Total ram usage:        0 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _setup
   858  071F                     _setup:
   859  071F                     l739:	
   860                           ;incstack = 0
   861                           ; Regs used in _setup: [wreg+status,2]
   862                           
   863                           
   864                           ;CONFIG.c: 12:     ANSEL = 0b00000011;
   865  071F  3003               	movlw	3
   866  0720  1683               	bsf	3,5	;RP0=1, select bank3
   867  0721  1703               	bsf	3,6	;RP1=1, select bank3
   868  0722  0088               	movwf	8	;volatile
   869  0723                     l741:
   870                           
   871                           ;CONFIG.c: 13:     ANSELH = 0;
   872  0723  0189               	clrf	9	;volatile
   873  0724                     l743:
   874                           
   875                           ;CONFIG.c: 14:     TRISA = 0b000000011;
   876  0724  3003               	movlw	3
   877  0725  1683               	bsf	3,5	;RP0=1, select bank1
   878  0726  1303               	bcf	3,6	;RP1=0, select bank1
   879  0727  0085               	movwf	5	;volatile
   880                           
   881                           ;CONFIG.c: 15:     TRISB = 0;
   882  0728  0186               	clrf	6	;volatile
   883                           
   884                           ;CONFIG.c: 16:     TRISC = 0;
   885  0729  0187               	clrf	7	;volatile
   886                           
   887                           ;CONFIG.c: 17:     TRISD = 0;
   888  072A  0188               	clrf	8	;volatile
   889                           
   890                           ;CONFIG.c: 18:     PORTA = 0;
   891  072B  1283               	bcf	3,5	;RP0=0, select bank0
   892  072C  1303               	bcf	3,6	;RP1=0, select bank0
   893  072D  0185               	clrf	5	;volatile
   894                           
   895                           ;CONFIG.c: 19:     PORTB = 0;
   896  072E  0186               	clrf	6	;volatile
   897                           
   898                           ;CONFIG.c: 20:     PORTC = 0;
   899  072F  0187               	clrf	7	;volatile
   900                           
   901                           ;CONFIG.c: 21:     PORTD = 0;
   902  0730  0188               	clrf	8	;volatile
   903  0731                     l80:
   904  0731  0008               	return
   905  0732                     __end_of_setup:
   906                           
   907                           	psect	text2
   908  070E                     __ptext2:	
   909 ;; *************** function _intr *****************
   910 ;; Defined at:
   911 ;;		line 11 in file "INT.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		None
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         0       0       0       0       0
   929 ;;Total ram usage:        0 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _intr
   940  070E                     _intr:
   941  070E                     l737:	
   942                           ;incstack = 0
   943                           ; Regs used in _intr: []
   944                           
   945                           
   946                           ;INT.c: 12:     INTCONbits.GIE = 1;
   947  070E  178B               	bsf	11,7	;volatile
   948                           
   949                           ;INT.c: 13:     INTCONbits.PEIE = 1;
   950  070F  170B               	bsf	11,6	;volatile
   951                           
   952                           ;INT.c: 14:     PIE1bits.RCIE = 1;
   953  0710  1683               	bsf	3,5	;RP0=1, select bank1
   954  0711  1303               	bcf	3,6	;RP1=0, select bank1
   955  0712  168C               	bsf	12,5	;volatile
   956  0713                     l57:	
   957                           ;INT.c: 17:     return;
   958                           
   959  0713  0008               	return
   960  0714                     __end_of_intr:
   961                           
   962                           	psect	text3
   963  0762                     __ptext3:	
   964 ;; *************** function _Lcd_Write_String *****************
   965 ;; Defined at:
   966 ;;		line 124 in file "LCD.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  a               1    wreg     PTR unsigned char 
   969 ;;		 -> STR_1(11), 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  a               1    5[COMMON] PTR unsigned char 
   972 ;;		 -> STR_1(11), 
   973 ;;  i               2    3[COMMON] int 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         3       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         3       0       0       0       0
   987 ;;Total ram usage:        3 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    2
   990 ;; This function calls:
   991 ;;		_Lcd_Write_Char
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _Lcd_Write_String
   999  0762                     _Lcd_Write_String:
  1000                           
  1001                           ;incstack = 0
  1002                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1003                           ;Lcd_Write_String@a stored from wreg
  1004  0762  00F5               	movwf	Lcd_Write_String@a
  1005  0763                     l777:
  1006                           
  1007                           ;LCD.c: 124: void Lcd_Write_String(char *a);LCD.c: 125: {;LCD.c: 126:  int i;;LCD.c: 127
      +                          :  for(i=0;a[i]!='\0';i++)
  1008  0763  01F3               	clrf	Lcd_Write_String@i
  1009  0764  01F4               	clrf	Lcd_Write_String@i+1
  1010  0765  2F79               	goto	l783
  1011  0766                     l779:
  1012                           
  1013                           ;LCD.c: 128:     Lcd_Write_Char(a[i]);
  1014  0766  0873               	movf	Lcd_Write_String@i,w
  1015  0767  0775               	addwf	Lcd_Write_String@a,w
  1016  0768  0084               	movwf	4
  1017  0769  120A  118A  2003  120A  118A  	fcall	stringdir
  1018  076E  120A  118A  2732  120A  118A  	fcall	_Lcd_Write_Char
  1019  0773                     l781:
  1020  0773  3001               	movlw	1
  1021  0774  07F3               	addwf	Lcd_Write_String@i,f
  1022  0775  1803               	skipnc
  1023  0776  0AF4               	incf	Lcd_Write_String@i+1,f
  1024  0777  3000               	movlw	0
  1025  0778  07F4               	addwf	Lcd_Write_String@i+1,f
  1026  0779                     l783:
  1027  0779  0873               	movf	Lcd_Write_String@i,w
  1028  077A  0775               	addwf	Lcd_Write_String@a,w
  1029  077B  0084               	movwf	4
  1030  077C  120A  118A  2003  120A  118A  	fcall	stringdir
  1031  0781  3A00               	xorlw	0
  1032  0782  1D03               	skipz
  1033  0783  2F85               	goto	u41
  1034  0784  2F86               	goto	u40
  1035  0785                     u41:
  1036  0785  2F66               	goto	l779
  1037  0786                     u40:
  1038  0786                     l44:
  1039  0786  0008               	return
  1040  0787                     __end_of_Lcd_Write_String:
  1041                           
  1042                           	psect	text4
  1043  0732                     __ptext4:	
  1044 ;; *************** function _Lcd_Write_Char *****************
  1045 ;; Defined at:
  1046 ;;		line 106 in file "LCD.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  a               1    wreg     unsigned char 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  a               1    2[COMMON] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         1       0       0       0       0
  1062 ;;      Temps:          1       0       0       0       0
  1063 ;;      Totals:         2       0       0       0       0
  1064 ;;Total ram usage:        2 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    1
  1067 ;; This function calls:
  1068 ;;		_Lcd_Port
  1069 ;; This function is called by:
  1070 ;;		_Lcd_Write_String
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _Lcd_Write_Char
  1076  0732                     _Lcd_Write_Char:
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1080                           ;Lcd_Write_Char@a stored from wreg
  1081  0732  00F2               	movwf	Lcd_Write_Char@a
  1082  0733                     l701:
  1083                           
  1084                           ;LCD.c: 106: void Lcd_Write_Char(char a);LCD.c: 107: {;LCD.c: 112:    RB6 = 1;
  1085  0733  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0734  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0735  1706               	bsf	6,6	;volatile
  1088  0736                     l703:
  1089                           
  1090                           ;LCD.c: 117:    Lcd_Port(a);
  1091  0736  0872               	movf	Lcd_Write_Char@a,w
  1092  0737  120A  118A  2708  120A  118A  	fcall	_Lcd_Port
  1093  073C                     l705:
  1094                           
  1095                           ;LCD.c: 119:    RB7 = 1;
  1096  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1097  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1098  073E  1786               	bsf	6,7	;volatile
  1099  073F                     l707:
  1100                           
  1101                           ;LCD.c: 120:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1102  073F  301A               	movlw	26
  1103  0740  00F1               	movwf	??_Lcd_Write_Char
  1104  0741                     u77:
  1105  0741  0BF1               	decfsz	??_Lcd_Write_Char,f
  1106  0742  2F41               	goto	u77
  1107  0743  0000               	nop
  1108  0744                     l709:
  1109                           
  1110                           ;LCD.c: 121:    RB7 = 0;
  1111  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0746  1386               	bcf	6,7	;volatile
  1114  0747                     l38:
  1115  0747  0008               	return
  1116  0748                     __end_of_Lcd_Write_Char:
  1117                           
  1118                           	psect	text5
  1119  07B1                     __ptext5:	
  1120 ;; *************** function _Lcd_Init *****************
  1121 ;; Defined at:
  1122 ;;		line 90 in file "LCD.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0
  1138 ;;      Temps:          2       0       0       0       0
  1139 ;;      Totals:         2       0       0       0       0
  1140 ;;Total ram usage:        2 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    2
  1143 ;; This function calls:
  1144 ;;		_Lcd_Cmd
  1145 ;;		_Lcd_Port
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           
  1152                           ;psect for function _Lcd_Init
  1153  07B1                     _Lcd_Init:
  1154  07B1                     l719:	
  1155                           ;incstack = 0
  1156                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1157                           
  1158                           
  1159                           ;LCD.c: 92:   Lcd_Port(0x00);
  1160  07B1  3000               	movlw	0
  1161  07B2  120A  118A  2708  120A  118A  	fcall	_Lcd_Port
  1162  07B7                     l721:
  1163                           
  1164                           ;LCD.c: 93:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1165  07B7  3034               	movlw	52
  1166  07B8  00F5               	movwf	??_Lcd_Init+1
  1167  07B9  30F1               	movlw	241
  1168  07BA  00F4               	movwf	??_Lcd_Init
  1169  07BB                     u87:
  1170  07BB  0BF4               	decfsz	??_Lcd_Init,f
  1171  07BC  2FBB               	goto	u87
  1172  07BD  0BF5               	decfsz	??_Lcd_Init+1,f
  1173  07BE  2FBB               	goto	u87
  1174  07BF  2FC0               	nop2
  1175  07C0                     l723:
  1176                           
  1177                           ;LCD.c: 94:   Lcd_Cmd(0x30);
  1178  07C0  3030               	movlw	48
  1179  07C1  120A  118A  2748  120A  118A  	fcall	_Lcd_Cmd
  1180                           
  1181                           ;LCD.c: 95:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1182  07C6  300D               	movlw	13
  1183  07C7  00F5               	movwf	??_Lcd_Init+1
  1184  07C8  30FB               	movlw	251
  1185  07C9  00F4               	movwf	??_Lcd_Init
  1186  07CA                     u97:
  1187  07CA  0BF4               	decfsz	??_Lcd_Init,f
  1188  07CB  2FCA               	goto	u97
  1189  07CC  0BF5               	decfsz	??_Lcd_Init+1,f
  1190  07CD  2FCA               	goto	u97
  1191  07CE  2FCF               	nop2
  1192  07CF                     l725:
  1193                           
  1194                           ;LCD.c: 96:   Lcd_Cmd(0x30);
  1195  07CF  3030               	movlw	48
  1196  07D0  120A  118A  2748  120A  118A  	fcall	_Lcd_Cmd
  1197  07D5                     l727:
  1198                           
  1199                           ;LCD.c: 97:  _delay((unsigned long)((15)*(8000000/4000.0)));
  1200  07D5  3027               	movlw	39
  1201  07D6  00F5               	movwf	??_Lcd_Init+1
  1202  07D7  30F5               	movlw	245
  1203  07D8  00F4               	movwf	??_Lcd_Init
  1204  07D9                     u107:
  1205  07D9  0BF4               	decfsz	??_Lcd_Init,f
  1206  07DA  2FD9               	goto	u107
  1207  07DB  0BF5               	decfsz	??_Lcd_Init+1,f
  1208  07DC  2FD9               	goto	u107
  1209                           
  1210                           ;LCD.c: 98:   Lcd_Cmd(0x30);
  1211  07DD  3030               	movlw	48
  1212  07DE  120A  118A  2748  120A  118A  	fcall	_Lcd_Cmd
  1213                           
  1214                           ;LCD.c: 100:   Lcd_Cmd(0x3C);
  1215  07E3  303C               	movlw	60
  1216  07E4  120A  118A  2748  120A  118A  	fcall	_Lcd_Cmd
  1217                           
  1218                           ;LCD.c: 101:   Lcd_Cmd(0x08);
  1219  07E9  3008               	movlw	8
  1220  07EA  120A  118A  2748  120A  118A  	fcall	_Lcd_Cmd
  1221                           
  1222                           ;LCD.c: 102:   Lcd_Cmd(0x01);
  1223  07EF  3001               	movlw	1
  1224  07F0  120A  118A  2748  120A  118A  	fcall	_Lcd_Cmd
  1225                           
  1226                           ;LCD.c: 103:   Lcd_Cmd(0x07);
  1227  07F5  3007               	movlw	7
  1228  07F6  120A  118A  2748  120A  118A  	fcall	_Lcd_Cmd
  1229  07FB                     l35:
  1230  07FB  0008               	return
  1231  07FC                     __end_of_Lcd_Init:
  1232                           
  1233                           	psect	text6
  1234  0748                     __ptext6:	
  1235 ;; *************** function _Lcd_Cmd *****************
  1236 ;; Defined at:
  1237 ;;		line 54 in file "LCD.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  a               1    wreg     unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  a               1    3[COMMON] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         1       0       0       0       0
  1253 ;;      Temps:          2       0       0       0       0
  1254 ;;      Totals:         3       0       0       0       0
  1255 ;;Total ram usage:        3 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    1
  1258 ;; This function calls:
  1259 ;;		_Lcd_Port
  1260 ;; This function is called by:
  1261 ;;		_Lcd_Init
  1262 ;;		_Lcd_Clear
  1263 ;;		_Lcd_Set_Cursor
  1264 ;;		_Lcd_Shift_Right
  1265 ;;		_Lcd_Shift_Left
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _Lcd_Cmd
  1271  0748                     _Lcd_Cmd:
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1275                           ;Lcd_Cmd@a stored from wreg
  1276  0748  00F3               	movwf	Lcd_Cmd@a
  1277  0749                     l691:
  1278                           
  1279                           ;LCD.c: 54: void Lcd_Cmd(char a);LCD.c: 55: {;LCD.c: 56:  RB6 = 0;
  1280  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1281  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1282  074B  1306               	bcf	6,6	;volatile
  1283  074C                     l693:
  1284                           
  1285                           ;LCD.c: 57:  Lcd_Port(a);
  1286  074C  0873               	movf	Lcd_Cmd@a,w
  1287  074D  120A  118A  2708  120A  118A  	fcall	_Lcd_Port
  1288  0752                     l695:
  1289                           
  1290                           ;LCD.c: 58:  RB7 = 1;
  1291  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0754  1786               	bsf	6,7	;volatile
  1294  0755                     l697:
  1295                           
  1296                           ;LCD.c: 59:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1297  0755  300B               	movlw	11
  1298  0756  00F2               	movwf	??_Lcd_Cmd+1
  1299  0757  3062               	movlw	98
  1300  0758  00F1               	movwf	??_Lcd_Cmd
  1301  0759                     u117:
  1302  0759  0BF1               	decfsz	??_Lcd_Cmd,f
  1303  075A  2F59               	goto	u117
  1304  075B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1305  075C  2F59               	goto	u117
  1306  075D  0000               	nop
  1307  075E                     l699:
  1308                           
  1309                           ;LCD.c: 60:         RB7 = 0;
  1310  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1311  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0760  1386               	bcf	6,7	;volatile
  1313  0761                     l23:
  1314  0761  0008               	return
  1315  0762                     __end_of_Lcd_Cmd:
  1316                           
  1317                           	psect	text7
  1318  0708                     __ptext7:	
  1319 ;; *************** function _Lcd_Port *****************
  1320 ;; Defined at:
  1321 ;;		line 15 in file "LCD.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  a               1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  a               1    0[COMMON] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         1       0       0       0       0
  1339 ;;Total ram usage:        1 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_Lcd_Cmd
  1345 ;;		_Lcd_Init
  1346 ;;		_Lcd_Write_Char
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _Lcd_Port
  1352  0708                     _Lcd_Port:
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _Lcd_Port: [wreg]
  1356                           ;Lcd_Port@a stored from wreg
  1357  0708  00F0               	movwf	Lcd_Port@a
  1358  0709                     l689:
  1359                           
  1360                           ;LCD.c: 15: void Lcd_Port(char a);LCD.c: 16: {;LCD.c: 17:     PORTD = a;
  1361  0709  0870               	movf	Lcd_Port@a,w
  1362  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1363  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1364  070C  0088               	movwf	8	;volatile
  1365  070D                     l20:
  1366  070D  0008               	return
  1367  070E                     __end_of_Lcd_Port:
  1368                           
  1369                           	psect	text8
  1370  0714                     __ptext8:	
  1371 ;; *************** function _ADCL_con *****************
  1372 ;; Defined at:
  1373 ;;		line 10 in file "adc.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _ADCL_con
  1402  0714                     _ADCL_con:
  1403  0714                     l711:	
  1404                           ;incstack = 0
  1405                           ; Regs used in _ADCL_con: [wreg+status,2]
  1406                           
  1407                           
  1408                           ;adc.c: 11:     PIE1bits.ADIE = 1;
  1409  0714  1683               	bsf	3,5	;RP0=1, select bank1
  1410  0715  1303               	bcf	3,6	;RP1=0, select bank1
  1411  0716  170C               	bsf	12,6	;volatile
  1412  0717                     l713:
  1413                           
  1414                           ;adc.c: 12:     ADCON0 = 0b10000001;
  1415  0717  3081               	movlw	129
  1416  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1418  071A  009F               	movwf	31	;volatile
  1419  071B                     l715:
  1420                           
  1421                           ;adc.c: 13:     ADCON1 = 0;
  1422  071B  1683               	bsf	3,5	;RP0=1, select bank1
  1423  071C  1303               	bcf	3,6	;RP1=0, select bank1
  1424  071D  019F               	clrf	31	;volatile
  1425  071E                     l9:
  1426  071E  0008               	return
  1427  071F                     __end_of_ADCL_con:
  1428  007E                     btemp	set	126	;btemp
  1429  007E                     wtemp0	set	126
  1430                           
  1431                           	psect	config
  1432                           
  1433                           ;Config register CONFIG1 @ 0x2007
  1434                           ;	Oscillator Selection bits
  1435                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
  1436                           ;	Watchdog Timer Enable bit
  1437                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1438                           ;	Power-up Timer Enable bit
  1439                           ;	PWRTE = OFF, PWRT disabled
  1440                           ;	RE3/MCLR pin function select bit
  1441                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1442                           ;	Code Protection bit
  1443                           ;	CP = OFF, Program memory code protection is disabled
  1444                           ;	Data Code Protection bit
  1445                           ;	CPD = OFF, Data memory code protection is disabled
  1446                           ;	Brown Out Reset Selection bits
  1447                           ;	BOREN = ON, BOR enabled
  1448                           ;	Internal External Switchover bit
  1449                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1450                           ;	Fail-Safe Clock Monitor Enabled bit
  1451                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1452                           ;	Low Voltage Programming Enable bit
  1453                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1454                           ;	In-Circuit Debugger Mode bit
  1455                           ;	DEBUG = 0x1, unprogrammed default
  1456  2007                     	org	8199
  1457  2007  23D7               	dw	9175
  1458                           
  1459                           ;Config register CONFIG2 @ 0x2008
  1460                           ;	Brown-out Reset Selection bit
  1461                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1462                           ;	Flash Program Memory Self Write Enable bits
  1463                           ;	WRT = OFF, Write protection off
  1464  2008                     	org	8200
  1465  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     198
                                              6 COMMON     2     2      0
                           _ADCL_con
                           _Lcd_Init
                   _Lcd_Write_String
                               _intr
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _intr                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     153
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      30
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCL_con                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCL_con
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _intr
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Feb 13 01:13:06 2021

                        l9 071E                          pc 0002                         l20 070D  
                       l23 0761                         l35 07FB                         l44 0786  
                       l38 0747                         l80 0731                         l57 0713  
                       l97 07AE                         u40 0786                         u41 0785  
                       u57 0798                         u67 07A4                         u77 0741  
                       u87 07BB                         u97 07CA                         fsr 0004  
                      l701 0733                        l711 0714                        l703 0736  
                      l713 0717                        l721 07B7                        l705 073C  
                      l715 071B                        l723 07C0                        l707 073F  
                      l725 07CF                        l709 0744                        l741 0723  
                      l727 07D5                        l719 07B1                        l743 0724  
                      l737 070E                        l691 0749                        l739 071F  
                      l693 074C                        l781 0773                        l695 0752  
                      l783 0779                        l791 0796                        l689 0709  
                      l697 0755                        l777 0763                        l793 07A0  
                      l785 0787                        l699 075E                        l779 0766  
                      l795 07A8                        l787 078C                        l789 0791  
                      _RB6 0036                        _RB7 0037                        u107 07D9  
                      u117 0759                        fsr0 0004                       STR_1 0009  
        ?_Lcd_Write_String 0070                       _main 0787           __end_of_ADCL_con 071F  
                     _intr 070E                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 0762                      ?_main 0070  
                    ?_intr 0070                      _ANSEL 0188                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _setup 071F                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 07FC  
         __end_of_Lcd_Port 070E            __initialization 07FC               __end_of_main 07B1  
             __end_of_intr 0714                     ??_main 0076                     ??_intr 0070  
                   _ADCON0 001F                     _ADCON1 009F                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0016  
                ?_ADCL_con 0070    __end_of__initialization 07FC             __pcstackCOMMON 0070  
            __end_of_setup 0732                 ??_ADCL_con 0070                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0070                 __pmaintext 0787  
__size_of_Lcd_Write_String 0025                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0732                    _Lcd_Cmd 0748  
                  __ptext1 071F                    __ptext2 070E                    __ptext3 0762  
                  __ptext4 0732                    __ptext5 07B1                    __ptext6 0748  
                  __ptext7 0708                    __ptext8 0714     __end_of_Lcd_Write_Char 0748  
     end_of_initialization 07FC                  Lcd_Port@a 0070          __size_of_ADCL_con 000B  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075          Lcd_Write_String@i 0073  
         _Lcd_Write_String 0762        start_initialization 07FC          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006            Lcd_Write_Char@a 0072                  ___latbits 0002  
                 ?_Lcd_Cmd 0070                  __pstrings 0003                   _ADCL_con 0714  
           __size_of_setup 0013                   _PIE1bits 008C                   Lcd_Cmd@a 0073  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 07B1  
                 _Lcd_Port 0708   __end_of_Lcd_Write_String 0787           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 0009              __size_of_main 002A              __size_of_intr 0006  
               _INTCONbits 000B                  stringcode 0003                   stringdir 0003  
                 stringtab 0003  
